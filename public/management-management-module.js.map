{"version":3,"sources":["./src/app/modules/analytics/management/management.page.scss","./src/app/modules/analytics/management/management.page.html","./src/app/modules/analytics/management/management-routing.module.ts","./src/app/modules/analytics/management/management.module.ts","./src/app/modules/analytics/management/management.page.ts"],"names":[],"mappings":"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","file":"management-management-module.js","sourcesContent":["export default \"ion-label {\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcbWFuYWdlbWVudC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxTQUFBO0FBQ0YiLCJmaWxlIjoibWFuYWdlbWVudC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tbGFiZWwge1xyXG4gIG1hcmdpbjogMDtcclxufSJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Management</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-menu-button contentId=\\\"analytics-content\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-md=\\\"8\\\" offset-md=\\\"2\\\">\\n          <ion-item color=\\\"primary\\\" lines=\\\"none\\\">\\n            <ion-label>\\n              <ion-row>\\n                <ion-col>\\n                  <ion-item>\\n                    <ion-label>Choose period</ion-label>\\n                    <ion-datetime pickerFormat=\\\"MMMM-YYYY\\\" displayFormat=\\\"MMMM YYYY\\\" [max]=\\\"maxDate\\\"\\n                      placeholder=\\\"Select Month\\\" [(ngModel)]=\\\"date\\\" (ionChange)=\\\"filter()\\\"></ion-datetime>\\n                  </ion-item>\\n                </ion-col>\\n                <ion-col>\\n                  <ion-item>\\n                    <ion-label>Sort</ion-label>\\n                    <ion-select placeholder=\\\"Select One\\\" [(ngModel)]=\\\"sortField\\\" (ionChange)=\\\"filter()\\\">\\n                      <ion-select-option *ngFor=\\\"let sortField of sortFields | keyvalue\\\" [value]=\\\"sortField.key\\\">\\n                        {{sortField.value}}\\n                      </ion-select-option>\\n                    </ion-select>\\n                  </ion-item>\\n                </ion-col>\\n                <ion-col>\\n                  <ion-item>\\n                    <ion-label>Sort order</ion-label>\\n                    <ion-select placeholder=\\\"Select One\\\" [(ngModel)]=\\\"sortOrder\\\" (ionChange)=\\\"filter()\\\">\\n                      <ion-select-option *ngFor=\\\"let sortOrder of sortOrders | keyvalue\\\" [value]=\\\"sortOrder.key\\\">\\n                        {{sortOrder.value}}\\n                      </ion-select-option>\\n                    </ion-select>\\n                  </ion-item>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col>\\n                  <ion-item>\\n                    <ion-label>Room</ion-label>\\n                    <ion-select placeholder=\\\"Select One\\\" [(ngModel)]=\\\"room\\\" (ionChange)=\\\"filter()\\\">\\n                      <ion-select-option *ngFor=\\\"let room of rooms\\\" [value]=\\\"room\\\">{{room.name}}\\n                      </ion-select-option>\\n                    </ion-select>\\n                  </ion-item>\\n                </ion-col>\\n                <ion-col>\\n                  <ion-item>\\n                    <ion-label>Booking Step</ion-label>\\n                    <ion-select placeholder=\\\"Select One\\\" [(ngModel)]=\\\"bookingStep\\\" (ionChange)=\\\"filter()\\\">\\n                      <ion-select-option *ngFor=\\\"let bookingStep of bookingSteps | keyvalue\\\" [value]=\\\"bookingStep.key\\\">\\n                        {{bookingStep.value}}\\n                      </ion-select-option>\\n                    </ion-select>\\n                  </ion-item>\\n                </ion-col>\\n                <ion-col>\\n                  <ion-item>\\n                    <ion-label>Booking Step Equals</ion-label>\\n                    <ion-select placeholder=\\\"Select One\\\" [(ngModel)]=\\\"bookingStepExpr\\\" [disabled]=\\\"!bookingStep\\\"\\n                      (ionChange)=\\\"filter()\\\">\\n                      <ion-select-option *ngFor=\\\"let bookingStepExpr of bookingStepExprs | keyvalue\\\"\\n                        [value]=\\\"bookingStepExpr.key\\\">{{bookingStepExpr.value}}\\n                      </ion-select-option>\\n                    </ion-select>\\n                  </ion-item>\\n                </ion-col>\\n              </ion-row>\\n            </ion-label>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size-md=\\\"8\\\" offset-md=\\\"2\\\">\\n        <ion-list>\\n          <ion-list-header class=\\\"ion-no-padding\\\">\\n            <ion-label>\\n              <ion-item>\\n                <ion-label>\\n                  <ion-row>\\n                    <ion-col class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n                      <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\n                        <ion-label class=\\\"ion-text-center\\\">\\n                          Step\\n                        </ion-label>\\n                      </ion-item>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n                      <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\n                        <ion-label class=\\\"ion-text-center\\\">\\n                          Date form\\n                        </ion-label>\\n                      </ion-item>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n                      <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\n                        <ion-label class=\\\"ion-text-center\\\">\\n                          Date to\\n                        </ion-label>\\n                      </ion-item>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n                      <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\n                        <ion-label class=\\\"ion-text-center\\\">\\n                          <ion-text color=\\\"tertiary\\\">\\n                            Price\\n                          </ion-text>\\n                        </ion-label>\\n                      </ion-item>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-label>\\n              </ion-item>\\n            </ion-label>\\n          </ion-list-header>\\n          <ng-container *ngFor=\\\"let booking of bookings\\\">\\n            <ion-item-sliding>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>\\n                  <ion-row>\\n                    <ion-col class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n                      <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\n                        <ion-label class=\\\"ion-text-center\\\">\\n                          <ion-button [ngClass]=\\\"'status-color_' + booking.bookingStep\\\"\\n                            (click)=\\\"viewBooking(booking._id)\\\" fill=\\\"clear\\\">{{booking.bookingStep}}</ion-button>\\n                        </ion-label>\\n                      </ion-item>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n                      <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\n                        <ion-label class=\\\"ion-text-center\\\">\\n                          {{booking.dates.from | date: 'dd MMM'}}\\n                        </ion-label>\\n                      </ion-item>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n                      <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\n                        <ion-label class=\\\"ion-text-center\\\">\\n                          {{booking.dates.to | date: 'dd MMM'}}\\n                        </ion-label>\\n                      </ion-item>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-no-padding\\\" size=\\\"3\\\">\\n                      <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\n                        <ion-label class=\\\"ion-text-center\\\">\\n                          <ion-text color=\\\"tertiary\\\">\\n                            {{booking.price}}\\n                          </ion-text>\\n                        </ion-label>\\n                      </ion-item>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-label>\\n                <!-- <ion-note slot=\\\"end\\\">\\n                  slide\\n                </ion-note> -->\\n              </ion-item>\\n              <!-- <ion-item-options side=\\\"start\\\">\\n                <ion-item-option (click)=\\\"update(operator._id)\\\">\\n                  <ion-icon slot=\\\"icon-only\\\" name=\\\"pencil-outline\\\"></ion-icon>\\n                </ion-item-option>\\n              </ion-item-options> -->\\n              <ion-item-options *ngIf=\\\"!user?.blocked\\\" side=\\\"end\\\">\\n                <ion-item-option color=\\\"danger\\\" (click)=\\\"presentAlert(booking._id)\\\">\\n                  <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n                </ion-item-option>\\n              </ion-item-options>\\n              <ion-item-options *ngIf=\\\"booking.bookingStep !== 'cancelled' && !user?.blocked\\\" side=\\\"start\\\">\\n                <ion-item-option color=\\\"primary\\\" (click)=\\\"update(booking._id)\\\">\\n                  <ion-icon slot=\\\"icon-only\\\" name=\\\"pencil-outline\\\"></ion-icon>\\n                </ion-item-option>\\n              </ion-item-options>\\n\\n            </ion-item-sliding>\\n          </ng-container>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ManagementPage } from './management.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManagementPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManagementPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ManagementPageRoutingModule } from './management-routing.module';\n\nimport { ManagementPage } from './management.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ManagementPageRoutingModule\n  ],\n  declarations: [ManagementPage]\n})\nexport class ManagementPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Booking, BookingQuery, DateRangeLimits, Room, User } from 'src/app/interface';\nimport { Store } from '@ngrx/store';\nimport * as fns from 'date-fns';\nimport { SheduleService } from '../../shedule/shedule.service';\nimport { State } from 'src/app/store/reducers';\n// import { GetRoomsByDateRange } from 'src/app/store/actions/shedule.actions';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { getBookings } from 'src/app/store/reducers/shedule.reducer';\nimport { GetBookings } from 'src/app/store/actions/shedule.actions';\nimport { getCompany, getUser } from 'src/app/store/reducers/user.reducer';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-management',\n  templateUrl: './management.page.html',\n  styleUrls: ['./management.page.scss'],\n})\nexport class ManagementPage implements OnInit {\n  user: User;\n  bookings: Booking[];\n  room: Partial<Room>;\n  rooms: Partial<Room>[];\n\n  bookingSteps = environment.bookingStepsMap;\n  bookingStep = 'cancelled';\n  bookingStepExprs = environment.bookingStepExprsMap;\n  bookingStepExpr = '$eq';\n  sortFields = environment.sortFieldsMap;\n  sortField = 'dates.from';\n  sortOrders = environment.sortOrdersMap;\n  sortOrder = 1;\n\n  date = this.sheduleService.convertDateToShort(new Date());\n  maxDate = this.sheduleService.convertDateToShort(fns.add(new Date(), { years: 1 }));\n\n  constructor(\n    private sheduleService: SheduleService,\n    public store: Store<State>,\n    private router: Router,\n    private alertController: AlertController,\n  ) { }\n\n  ngOnInit() {\n    this.store.select(getCompany)\n        .subscribe(\n            (company) => {\n              this.rooms = [...company.rooms];\n              this.rooms.unshift({_id: null, name: 'All'});\n              console.log('rooms', this.rooms);\n              this.room = this.rooms[0];\n            },\n            (err) => console.log('load rooms err', err),\n        );\n\n    this.store.select(getUser)\n        .subscribe((user) => this.user = user);\n\n\n    this.store.select(getBookings)\n        .subscribe((bookings) => {\n          this.bookings = bookings;\n        });\n\n\n    // this.filterForm = new FormGroup({\n    //   date: new FormControl(),\n    //   room: new FormControl(),\n    //   bookingStep: new FormControl(),\n    //   sort: new FormControl(),\n    // });\n  }\n\n  ionViewWillEnter() {\n    const bookingQuery: BookingQuery = this.createBookingQuery();\n    this.store.dispatch(new GetBookings(bookingQuery));\n  }\n\n  async presentAlert(_id: string) {\n    const alert = await this.alertController.create({\n      // cssClass: 'my-custom-class',\n      header: 'Delete reservation',\n      subHeader: 'Reservation will be deleted',\n      message: 'Are you shure?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        // cssClass: 'secondary',\n        handler: (blah) => {\n          // console.log('Confirm Cancel: blah');\n        },\n      }, {\n        text: 'Ok',\n        handler: () => {\n          this.delete(_id);\n          const bookingQuery: BookingQuery = this.createBookingQuery();\n          this.store.dispatch(new GetBookings(bookingQuery));\n        },\n      }],\n    });\n    await alert.present();\n  }\n\n  createBookingQuery(): BookingQuery {\n    return <BookingQuery>{\n      dateRangeLimits: this.sheduleService.createDateRangeLimits(this.sheduleService.convertISOToDate(this.date)),\n      room_id: this.room._id,\n      bookingStep: this.bookingStep? {\n        val: this.bookingStep,\n        expr: this.bookingStepExpr,\n      } : null,\n      sort: {\n        field: this.sortField,\n        order: this.sortOrder,\n      },\n    };\n  }\n\n  filter() {\n    const bookingQuery: BookingQuery = this.createBookingQuery();\n    this.store.dispatch(new GetBookings(bookingQuery));\n  }\n\n  getBookings(room_id: string, date: string): Observable<Booking[]> {\n    return this.store.select(getBookings).pipe(\n        map((bookings) => {\n          return bookings\n              .filter((booking: Booking) => {\n                return booking.room_id === room_id;\n              })\n              .map((booking: Booking) => {\n                if (fns.isEqual(new Date(date), new Date(booking.dates.from))) {\n                  return { ...booking, info: 'start' };\n                } else if (fns.isEqual(new Date(date), new Date(booking.dates.to))) {\n                  return { ...booking, info: 'end' };\n                } else if (\n                  fns.isAfter(new Date(date), new Date(booking.dates.from)) &&\n              fns.isBefore(new Date(date), new Date(booking.dates.to))\n                ) {\n                  return { ...booking, info: 'ahead' };\n                } else {\n                  return;\n                }\n              })\n              .filter((booking) => booking)\n              .sort((a, b) => {\n                return new Date(a.dates.from).getTime() - new Date(b.dates.from).getTime();\n              })\n              .map((booking) => {\n                return booking;\n              });\n        }),\n    );\n  }\n\n  viewBooking(booking_id: string) {\n    // discover\n    this.router.navigate(['/', 'shedule', 'edit', booking_id]);\n  }\n\n  delete(booking_id: string) {\n    this.sheduleService.deleteBooking(booking_id)\n        .subscribe(\n            (_) => _,\n            (err) => console.log('err delete', err),\n        );\n  }\n\n  update(booking_id: string) {\n    this.router.navigateByUrl('/shedule/edit/' + booking_id);\n  }\n}\n"],"sourceRoot":"webpack:///"}