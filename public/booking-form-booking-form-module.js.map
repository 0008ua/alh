{"version":3,"sources":["./src/app/modules/shedule/booking-form/booking-form.page.ts","./src/app/modules/shedule/booking-form/booking-form.module.ts","./src/app/modules/shedule/booking-form/booking-form-routing.module.ts","./src/app/modules/shedule/booking-form/booking-form.page.html","./src/app/modules/shedule/booking-form/booking-form.page.scss"],"names":[],"mappings":"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","file":"booking-form-booking-form-module.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormArray, FormControl, FormGroup, FormGroupDirective, ValidatorFn, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { Observable, throwError } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Booking, Room, UpdateOn, User } from 'src/app/interface';\nimport { environment } from 'src/environments/environment';\nimport { SheduleService } from '../../shedule/shedule.service';\nimport * as fns from 'date-fns';\nimport { Store } from '@ngrx/store';\nimport { State } from 'src/app/store/reducers';\nimport { getUser } from 'src/app/store/reducers/user.reducer';\n\n@Component({\n  selector: 'app-booking-form',\n  templateUrl: './booking-form.page.html',\n  styleUrls: ['./booking-form.page.scss'],\n})\nexport class BookingFormPage implements OnInit {\n  user: User;\n  room: Room;\n  booking: Booking;\n  date: string;\n  bookingForm: FormGroup;\n\n  calculatedData: {\n    days?: number;\n    bookingPrice?: number;\n    totalPaid?: number;\n    balance?: number;\n    bookingStep?: string;\n  } = {};\n  isCancelled = false;\n\n\n  // oneDay = environment.constants.oneDay;\n  bookingSteps = environment.bookingStepsMap;\n  paymentMethods = environment.paymentMethodsMap;\n  editPayment: null | number = null;\n  availableTo: null | string = null;\n  fromPlusOneDay: string;\n  mode: 'new' | 'edit';\n  @ViewChild('bookingFormDirective', { static: false }) bookingFormDirective: FormGroupDirective;\n\n  constructor(\n    private route: ActivatedRoute,\n    private sheduleService: SheduleService,\n    private navController: NavController,\n    private router: Router,\n    private alertController: AlertController,\n    private store: Store<State>,\n  ) { }\n\n\n  ngOnInit() {\n    this.bookingForm = new FormGroup({\n      _id: new FormControl(\n          '', {\n            updateOn: 'change',\n          }),\n      guestName: new FormControl(\n          'Guest',\n          {\n            updateOn: 'change',\n            validators: [ // from a-z, A-Z, 0-9, а-я, А-Я and single characters іІїЇєЄ_@#$%№  \\'(js)   \"   \\\\-(regex), minLength 2?, max 40\n              Validators.pattern('^[a-zA-Z0-9а-яА-ЯіІїЇєЄ_@#$%№\\'\"\\\\-]{2,40}$'),\n              Validators.minLength(2),\n              Validators.maxLength(40),\n              Validators.required,\n            ],\n          }),\n      guestPhone: new FormControl(\n          '380500000000',\n          {\n            updateOn: 'change',\n            validators: [\n              Validators.required,\n              Validators.pattern('^((\\\\+[0-9]{3})|[0-9]{3}|0)[0-9]{9}$'),\n              Validators.minLength(9),\n              Validators.maxLength(13),\n            ],\n          },\n      ),\n      guestEmail: new FormControl(\n          '', {\n            updateOn: 'change',\n            validators: [\n              Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n            ],\n          }),\n      // price: new FormControl(\n      //     0, {\n      //       updateOn: 'change',\n      //       validators: [\n      //         Validators.required,\n      //         Validators.pattern('[0-9]*'),\n      //       ],\n      //     }),\n      discount: new FormControl(\n          0, {\n            updateOn: 'change',\n            validators: [\n              Validators.required,\n              Validators.pattern('[0-9]*'),\n              Validators.max(this.calculatedData.bookingPrice ? this.calculatedData.bookingPrice : null),\n            ],\n          }),\n      // bookingStep: new FormControl(\n      //     'preorder', {\n      //       updateOn: 'change',\n      //       validators: [\n      //         Validators.required,\n      //         Validators.pattern('^preorder|waiting\\\\-for\\\\-payment|reserved|cancelled$'),\n      //       ],\n      //     }),\n      dates: new FormGroup({\n        from: new FormControl(\n            0, {\n              updateOn: 'change',\n              validators: [\n                Validators.required,\n              ],\n            }),\n        to: new FormControl(\n            0, {\n              updateOn: 'change',\n              validators: [\n                Validators.required,\n              ],\n            }),\n      }),\n      payments: new FormArray([]),\n    });\n\n    this.route.paramMap.pipe(\n        switchMap((paramMap): Observable<Room> => {\n          if (paramMap.get('bookingId')) {\n          // edit booking\n            this.mode = 'edit';\n            return this.sheduleService.getBookingById(paramMap.get('bookingId')).pipe(\n                switchMap((booking) => {\n                  console.log('booking', booking);\n                  this.isCancelled = booking.bookingStep === 'cancelled';\n                  this.booking = this.sheduleService.convertBookingDatesIsoToShort(booking);\n                  this.booking.payments.forEach((_) => this.addPaymentsArrayControl());\n                  this.bookingForm.patchValue(this.booking);\n                  return this.sheduleService.getRoomById(booking.room_id);\n                }),\n            );\n          } else if (paramMap.get('roomId')) {\n          // new booking\n            this.mode = 'new';\n            this.date = paramMap.get('date');\n            return this.sheduleService.getRoomById(paramMap.get('roomId'));\n          } else {\n            return throwError('error parameter');\n          }\n        }),\n        switchMap((room: Room) => {\n          this.room = room;\n          if (this.mode === 'edit') {\n            return this.sheduleService.getAvailableDateTo(this.booking.room_id, this.booking.dates.to as string);\n          } else if (this.mode === 'new') {\n            this.fromPlusOneDay = this.sheduleService.convertDateToShort(\n                fns.add(this.sheduleService.convertShortToDate(this.date), { days: 1 }),\n            );\n            this.bookingForm.get('dates').get('from').setValue(this.date);\n            this.bookingForm.get('dates').get('to').setValue(this.fromPlusOneDay);\n            return this.sheduleService.getAvailableDateTo(this.room._id, this.date);\n          } else {\n            return throwError('error get room');\n          }\n        },\n        ),\n        switchMap(\n            (availableTo) => {\n              if (availableTo) {\n                this.availableTo = this.sheduleService.convertISOToShort(availableTo);\n              } else {\n                this.availableTo = this.sheduleService.convertDateToShort(fns.add(new Date(), { days: 30 }));\n              }\n              this.calcData();\n              return this.bookingForm.valueChanges;\n            }),\n    ).subscribe((_) => this.calcData(),\n        (err) => console.log('error', err),\n    );\n\n    this.store.select(getUser)\n        .subscribe((user) => {\n          this.user = user;\n        });\n  }\n\n  calcData() {\n    this.calculatedData.days = fns.differenceInCalendarDays(\n        this.sheduleService.convertShortToDate(this.bookingForm.get('dates').get('to').value),\n        this.sheduleService.convertShortToDate(this.bookingForm.get('dates').get('from').value),\n    );\n    this.calculatedData.bookingPrice = this.room.price * this.calculatedData.days;\n    let amount = 0;\n    this.bookingForm.get('payments')['controls'].forEach((control) => {\n      amount += control.get('amount').value;\n    });\n    this.calculatedData.totalPaid = amount;\n    this.calculatedData.balance = this.calculatedData.totalPaid - this.calculatedData.bookingPrice +\n      (+this.bookingForm.get('discount').value);\n\n    if (this.isCancelled) {\n      this.calculatedData.bookingStep = 'cancelled';\n    } else if (this.calculatedData.balance >= 0) {\n      this.calculatedData.bookingStep = 'paid';\n    } else if (this.calculatedData.totalPaid > 0) {\n      this.calculatedData.bookingStep = 'reserved';\n    } else {\n      this.calculatedData.bookingStep = 'preorder';\n    }\n  }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      // cssClass: 'my-custom-class',\n      header: 'Cancel reservation',\n      subHeader: 'Reservation will be cancelled and dessapears from shedule',\n      message: 'Are you shure?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        // cssClass: 'secondary',\n        handler: (blah) => {\n          // console.log('Confirm Cancel: blah');\n        },\n      }, {\n        text: 'Ok',\n        handler: () => {\n          this.isCancelled = true;\n          this.calcData();\n          this.onFormSubmit();\n        },\n      }],\n    });\n    await alert.present();\n  }\n\n  get paymentsFormGroup() {\n    return {\n      _id: new FormControl(\n          '',\n          {\n            updateOn: 'change',\n          },\n      ),\n      date: new FormControl(\n          this.sheduleService.convertDateToShort(new Date()),\n          {\n            updateOn: 'change',\n            validators: [\n              Validators.required,\n            ],\n          },\n      ),\n      amount: new FormControl(\n          200,\n          {\n            updateOn: 'change',\n            validators: [\n              Validators.required,\n              Validators.pattern('[0-9]*'),\n            ],\n          },\n      ),\n      paymentMethod: new FormControl(\n          'cash',\n          {\n            updateOn: 'change',\n            validators: [\n              Validators.required,\n              Validators.pattern('^card|cash$'),\n            ],\n          },\n      ),\n    };\n  }\n\n  getPaymentsArrayControlAt(i): AbstractControl {\n    const arrayControl = this.bookingForm.get('payments') as FormArray;\n    return arrayControl.at(i);\n  }\n\n  addPaymentsArrayControl() {\n    const control = this.bookingForm.get('payments') as FormArray;\n    control.push(new FormGroup({ ...this.paymentsFormGroup }));\n  }\n\n  addPaymentsArrayControlToBegin() {\n    const control = this.bookingForm.get('payments') as FormArray;\n    control.push(new FormGroup(this.paymentsFormGroup));\n    const newControl = { ...control.at(control.controls.length - 1).value };\n    for (let i = control.controls.length - 1; i > 0; i--) {\n      control.at(i).setValue({ ...control.at(i - 1).value });\n    }\n    control.at(0).setValue(newControl);\n  }\n\n\n  editPayments(position: number | null) {\n    this.editPayment = position;\n  }\n\n  private initControl(formState: any = null, options?: { validators?: ValidatorFn[], updateOn?: UpdateOn }) {\n    return new FormControl(formState, options);\n  }\n\n  addControl(\n      formField: string,\n      data?: { formState?: any, options?: { validators?: ValidatorFn[], updateOn?: UpdateOn } },\n  ) {\n    console.log('data', data);\n    this.bookingForm.addControl(formField, this.initControl(data.formState, data.options));\n  }\n\n  addArrayControl(\n      formField: string,\n      data?: { formState?: any, options?: { validators?: ValidatorFn[], updateOn?: UpdateOn } },\n  ) {\n    const control = this.bookingForm.get(formField) as FormArray;\n    control.push(this.initControl(data.formState, data.options));\n  }\n\n  removeArrayControl(formField: string, position: number) {\n    const control = this.bookingForm.get(formField) as FormArray;\n    control.removeAt(position);\n  }\n\n  onFormCancel() {\n    this.resetForm();\n    this.navController.back();\n    // this.router.navigate([this.mode === 'new' ? '/shedule' : '/shedule/discover/' + this.booking?._id]);\n  }\n\n  onFormSubmit() {\n    let booking =\n    {\n      ...this.bookingForm.value,\n      room_id: this.room._id,\n      price: this.calculatedData.bookingPrice,\n      bookingStep: this.calculatedData.bookingStep,\n    };\n    // prepare booking object to send to server\n    // booking = this.sheduleService.convertBookingDatesIsoToNumber(booking);\n    booking = this.sheduleService.convertBookingDatesIsoToShort(booking);\n    console.log('f booking', booking);\n\n    this.sheduleService.upsertBooking(booking)\n        .subscribe((result) => {\n          this.resetForm();\n          // const url = booking._id ? '/shedule/discover/' + booking._id : '/shedule/discover/' + result.upserted[0]._id;\n          // if (booking._id) {\n          // edit\n          this.navController.back();\n          // } else {\n          // new\n          //   this.router.navigateByUrl('/shedule/discover/' + result.upserted[0]._id);\n          // }\n        },\n        (err) => console.log('error', err.error));\n  }\n\n  resetForm() {\n    if (this.bookingFormDirective) {\n      (this.bookingForm.get('payments') as FormArray).clear();\n      this.bookingFormDirective.resetForm();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BookingFormPageRoutingModule } from './booking-form-routing.module';\n\nimport { BookingFormPage } from './booking-form.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    BookingFormPageRoutingModule,\n  ],\n  declarations: [BookingFormPage],\n})\nexport class BookingFormPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BookingFormPage } from './booking-form.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BookingFormPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BookingFormPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button >\\n      <!-- <ion-back-button [defaultHref]=\\\"mode === 'new' ? '/shedule': '/shedule/discover' + booking?._id\\\"> -->\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>booking-form</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"bookingForm\\\" #bookingFormDirective=\\\"ngForm\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-title>{{room?.name}}</ion-card-title>\\n              <ion-card-subtitle>\\n                <ion-text></ion-text>\\n                <ion-text [color]=\\\"calculatedData?.balance >= 0 ? 'success': 'danger'\\\">Balance:\\n                  {{calculatedData?.balance}}</ion-text>\\n\\n\\n\\n                <!-- з {{bookingForm.get('dates').get('from').value | date: 'dd MMM'}} по\\n                {{bookingForm.get('dates').get('to').value | date: 'dd MMM'}} -->\\n              </ion-card-subtitle>\\n            </ion-card-header>\\n\\n            <ion-card-content>\\n              <ion-row>\\n                <ion-col>\\n                  <ion-text>Price per night:</ion-text>\\n                </ion-col>\\n                <ion-col>\\n                  <ion-text color=\\\"primary\\\">{{room?.price}}</ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col>\\n                  <ion-text>Nights reserved:</ion-text>\\n                </ion-col>\\n                <ion-col>\\n                  <ion-text color=\\\"primary\\\">{{calculatedData?.days}}</ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col>\\n                  <ion-text>Status:</ion-text>\\n                </ion-col>\\n                <ion-col>\\n                  <ion-text [ngClass]=\\\"'status-color_' + calculatedData?.bookingStep\\\">{{bookingSteps.get(calculatedData?.bookingStep)}}</ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col>\\n                  <ion-text>Total price:</ion-text>\\n                </ion-col>\\n                <ion-col>\\n                  <ion-text color=\\\"primary\\\">{{calculatedData?.bookingPrice}}</ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col>\\n                  <ion-text>Discount:</ion-text>\\n                </ion-col>\\n                <ion-col>\\n                  <ion-text color=\\\"primary\\\">{{bookingForm?.get('discount').value}}</ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col>\\n                  <ion-text>Total paid:</ion-text>\\n                </ion-col>\\n                <ion-col>\\n                  <ion-text color=\\\"primary\\\">{{calculatedData?.totalPaid}}</ion-text>\\n                </ion-col>\\n              </ion-row>\\n            </ion-card-content>\\n          </ion-card>\\n\\n          <!-- <ion-item lines=\\\"none\\\">\\n                                              <ion-label class=\\\"date-label\\\">\\n\\n                                                <ion-text class=\\\"date-label__item\\\">\\n                                                  From: {{bookingForm.get('dates').get('from').value | date: 'dd MMMM yyyy'}}\\n                                                </ion-text>\\n                                                <ion-text color=\\\"secondary\\\" class=\\\"date-label__item\\\">\\n                                                  Available to: {{availableTo? (availableTo | date: 'dd MMMM yyyy') : 'No limits' }}\\n                                                </ion-text>\\n                                              </ion-label>\\n                                            </ion-item> -->\\n          <ion-list lines=\\\"none\\\" class=\\\"date-label\\\">\\n            <ion-item class=\\\"date-label__item\\\">\\n              <ion-label position=\\\"stacked\\\">\\n                From:\\n              </ion-label>\\n              {{bookingForm.get('dates').get('from').value | date: 'dd MMMM yyyy'}}\\n            </ion-item>\\n            <ion-item class=\\\"date-label__item\\\">\\n              <ion-label position=\\\"stacked\\\">\\n                Available to:\\n              </ion-label>\\n              <ion-text>\\n                {{availableTo? (availableTo | date: 'dd MMMM yyyy') : 'No limits' }}\\n\\n              </ion-text>\\n            </ion-item>\\n          </ion-list>\\n\\n          <ion-list lines=\\\"none\\\" class=\\\"date-label\\\">\\n\\n            <ion-item class=\\\"date-label__item\\\" formGroupName=\\\"dates\\\">\\n              <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">\\n                To:\\n              </ion-label>\\n              <ion-datetime pickerFormat=\\\"DD-MMMM-YYYY\\\" [min]=\\\"fromPlusOneDay\\\" [max]=\\\"availableTo\\\"\\n                displayFormat=\\\"DD MMMM YYYY\\\" placeholder=\\\"Select end date\\\" formControlName=\\\"to\\\"></ion-datetime>\\n              <ion-text *ngIf=\\\"bookingForm.get('dates').get('to').errors\\\" class=\\\"input-error\\\" color=\\\"danger\\\">\\n                {{bookingForm.get('dates').get('to').errors | json}}\\n              </ion-text>\\n            </ion-item>\\n\\n            <ion-item *ngIf=\\\"!user?.blocked\\\" class=\\\"date-label__item\\\">\\n              <ion-label>\\n                <ion-button fill=\\\"outline\\\" color=\\\"danger\\\" (click)=\\\"presentAlert()\\\">\\n                  Cancel reservation\\n                </ion-button>\\n              </ion-label>\\n            </ion-item>\\n\\n\\n          </ion-list>\\n\\n\\n\\n\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">\\n                Guest name\\n              </ion-label>\\n\\n              <ion-input type=\\\"text\\\" autocomplete autocorrect formControlName=\\\"guestName\\\"></ion-input>\\n            </ion-item>\\n            <ion-text *ngIf=\\\"bookingForm.get('guestName').errors\\\" class=\\\"input-error\\\" color=\\\"danger\\\">\\n              {{bookingForm.get('guestName').errors | json}}\\n            </ion-text>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Guest phone</ion-label>\\n              <ion-input type=\\\"text\\\" autocomplete autocorrect formControlName=\\\"guestPhone\\\"></ion-input>\\n            </ion-item>\\n            <ion-text *ngIf=\\\"bookingForm.get('guestPhone').errors\\\" class=\\\"input-error\\\" color=\\\"danger\\\">\\n              {{bookingForm.get('guestPhone').errors | json}}\\n            </ion-text>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Guest email</ion-label>\\n              <ion-input type=\\\"email\\\" autocomplete autocorrect formControlName=\\\"guestEmail\\\"></ion-input>\\n            </ion-item>\\n            <ion-text *ngIf=\\\"bookingForm.get('guestEmail').errors\\\" class=\\\"input-error\\\" color=\\\"danger\\\">\\n              {{bookingForm.get('guestEmail').errors | json}}\\n            </ion-text>\\n\\n            <!-- <ion-item>\\n                  <ion-label position=\\\"floating\\\">Price</ion-label>\\n                  <ion-input type=\\\"text\\\" autocomplete autocorrect formControlName=\\\"price\\\"></ion-input>\\n                </ion-item>\\n                <ion-text *ngIf=\\\"bookingForm.get('price').errors\\\" class=\\\"input-error\\\" color=\\\"danger\\\">\\n                  {{bookingForm.get('price').errors | json}}\\n                </ion-text> -->\\n\\n\\n\\n            <!-- <ion-item>\\n                  <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Booking step</ion-label>\\n                  <ion-select placeholder=\\\"Select One\\\" interface=\\\"popover\\\" formControlName=\\\"bookingStep\\\">\\n                    <ion-select-option *ngFor=\\\"let bookingStep of bookingSteps\\\">{{bookingStep}}</ion-select-option>\\n                  </ion-select>\\n                </ion-item>\\n                <ion-text *ngIf=\\\"bookingForm.get('bookingStep').errors\\\" class=\\\"input-error\\\" color=\\\"danger\\\">\\n                  {{bookingForm.get('bookingStep').errors | json}}\\n                </ion-text> -->\\n\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Discount</ion-label>\\n              <ion-input type=\\\"text\\\" autocomplete autocorrect formControlName=\\\"discount\\\"></ion-input>\\n            </ion-item>\\n            <ion-text *ngIf=\\\"bookingForm.get('discount').errors\\\" class=\\\"input-error\\\" color=\\\"danger\\\">\\n              {{bookingForm.get('discount').errors | json}}\\n            </ion-text>\\n          </ion-list>\\n\\n          <ion-list lines=\\\"none\\\">\\n            <ion-list-header>\\n              <ion-label>Payments</ion-label>\\n              <ion-button *ngIf=\\\"editPayment === null\\\" (click)=\\\"addPaymentsArrayControlToBegin(); editPayments(0);\\\">\\n                Add</ion-button>\\n              <ion-button *ngIf=\\\"editPayment !== null\\\" [disabled]=\\\"bookingForm.get('payments').status === 'INVALID'\\\"\\n                (click)=\\\"editPayments(null)\\\">Ok</ion-button>\\n            </ion-list-header>\\n            <ng-container *ngFor=\\\"let paymentsControl of bookingForm.get('payments')['controls']; let i= index\\\"\\n              formArrayName=\\\"payments\\\">\\n              <ng-container [formGroupName]=\\\"i\\\">\\n                <ion-item-sliding *ngIf=\\\"editPayment === null || editPayment !== i\\\">\\n                  <ion-item>\\n                    <ion-label>\\n                      <h2>Amount: <ion-text color=\\\"secondary\\\">{{getPaymentsArrayControlAt(i).get('amount').value}}\\n                        </ion-text>\\n                      </h2>\\n                      <p>Payment date: <ion-text color=\\\"secondary\\\">\\n                          {{getPaymentsArrayControlAt(i).get('date').value | date: 'dd MMM' }}</ion-text>\\n                      </p>\\n                      <p>Payment type: <ion-text color=\\\"secondary\\\">\\n                          {{getPaymentsArrayControlAt(i).get('paymentMethod').value}}</ion-text>\\n                      </p>\\n                    </ion-label>\\n                    <ion-note slot=\\\"end\\\">\\n                      slide for options\\n                    </ion-note>\\n                  </ion-item>\\n\\n                  <ion-item-options side=\\\"start\\\">\\n                    <ion-item-option (click)=\\\"editPayments(i)\\\">\\n                      <ion-icon slot=\\\"icon-only\\\" name=\\\"pencil-outline\\\"></ion-icon>\\n                    </ion-item-option>\\n                  </ion-item-options>\\n                  <ion-item-options side=\\\"end\\\">\\n                    <ion-item-option color=\\\"danger\\\" (click)=\\\"removeArrayControl('payments', i)\\\">\\n                      <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n                    </ion-item-option>\\n                  </ion-item-options>\\n                </ion-item-sliding>\\n\\n                <ion-list *ngIf=\\\"editPayment === i\\\">\\n\\n                  <ion-item>\\n                    <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Choose date</ion-label>\\n                    <ion-datetime pickerFormat=\\\"DD-MMMM-YYYY\\\" displayFormat=\\\"DD MMMM YYYY\\\" placeholder=\\\"Select Month\\\"\\n                      formControlName=\\\"date\\\"></ion-datetime>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Amount</ion-label>\\n                    <ion-input type=\\\"text\\\" autocomplete autocorrect formControlName=\\\"amount\\\"></ion-input>\\n                  </ion-item>\\n                  <ion-text *ngIf=\\\"getPaymentsArrayControlAt(i).get('amount').errors\\\" class=\\\"input-error\\\"\\n                    color=\\\"danger\\\">\\n                    {{getPaymentsArrayControlAt(i).get('amount').errors | json}}\\n                  </ion-text>\\n\\n                  <ion-item>\\n                    <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Payment method</ion-label>\\n                    <ion-select placeholder=\\\"Select One\\\" interface=\\\"popover\\\" formControlName=\\\"paymentMethod\\\">\\n                      <ion-select-option *ngFor=\\\"let paymentMethod of paymentMethods | keyvalue\\\" [value]=\\\"paymentMethod.key\\\">\\n                        <span>{{paymentMethod.value}}</span>\\n                      </ion-select-option>\\n                    </ion-select>\\n                  </ion-item>\\n                  <ion-text *ngIf=\\\"getPaymentsArrayControlAt(i).get('paymentMethod').errors\\\" class=\\\"input-error\\\"\\n                    color=\\\"danger\\\">{{getPaymentsArrayControlAt(i).get('paymentMethod').errors | json}}\\n                  </ion-text>\\n                </ion-list>\\n              </ng-container>\\n            </ng-container>\\n          </ion-list>\\n          <ion-row>\\n            <ion-col size=\\\"8\\\">\\n              <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" (click)=\\\"onFormCancel()\\\">\\n                Cancel\\n              </ion-button>\\n            </ion-col>\\n            <ion-col>\\n              <ion-button expand=\\\"block\\\" [disabled]=\\\"bookingForm.status === 'INVALID' || this.isCancelled || user.blocked\\\" (click)=\\\"onFormSubmit()\\\">\\n                Submit {{bookingForm.errors}}\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJib29raW5nLWZvcm0ucGFnZS5zY3NzIn0= */\";"],"sourceRoot":"webpack:///"}