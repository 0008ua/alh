{"version":3,"sources":["./src/app/store/actions/shedule.actions.ts","./src/app/store/store-toast.service.ts","./src/environments/environment.ts","./src/app/modules/user/http-interceptor.-refresh-token.service.ts","./src/app/store/store.module.ts","./src/app/interface.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modules/user/user.service.ts","./src/app/modules/user/http-interceptor.service.ts","./src/app/store/effects/user.effects.ts","./src/app/store/entity-metadata.ts","./src/app/store/operator-data.service.ts","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/store/actions/user.actions.ts","./src/app/store/reducers/user.reducer.ts","./src/app/modules/shedule/shedule.service.ts","./src/app/store/effects/shedule.effects.ts","./src/app/store/reducers/shedule.reducer.ts","./src/app/store/reducers/index.ts","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;AChOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAY,eAsBX;AAtBD,WAAY,eAAe;IACzB,8CAA2B;IAC3B,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","file":"main.js","sourcesContent":["import { Action } from '@ngrx/store';\nimport { Booking, BookingQuery, Payment, PaymentQuery } from '../../interface';\n\nexport enum SheduleActionTypes {\n  GetBookings = '[Shedule] Get Bookings',\n  GetBookingsSuccess = '[Shedule] Get Bookings Success',\n  // GetAnalyticsBookings = '[Shedule] Get Analytics Bookings',\n  // GetAnalyticsBookingsSuccess = '[Shedule] Get Analytics Bookings Success',\n  GetPayments = '[Shedule] Get Payments',\n  GetPaymentsSuccess = '[Shedule] Get Payments Success',\n}\n\nexport class GetBookings implements Action {\n  readonly type = SheduleActionTypes.GetBookings;\n  constructor(public payload: BookingQuery) { }\n}\n\nexport class GetBookingsSuccess implements Action {\n  readonly type = SheduleActionTypes.GetBookingsSuccess;\n  constructor(public payload: Booking[]) { }\n}\n\n// export class GetAnalyticsBookings implements Action {\n//   readonly type = SheduleActionTypes.GetAnalyticsBookings;\n//   constructor(public payload: BookingQuery) { }\n// }\n\n// export class GetAnalyticsBookingsSuccess implements Action {\n//   readonly type = SheduleActionTypes.GetAnalyticsBookingsSuccess;\n//   constructor(public payload: Booking[]) { }\n// }\n\nexport class GetPayments implements Action {\n  readonly type = SheduleActionTypes.GetPayments;\n  constructor(public payload: PaymentQuery) { }\n}\n\nexport class GetPaymentsSuccess implements Action {\n  readonly type = SheduleActionTypes.GetPaymentsSuccess;\n  constructor(public payload: Payment[]) { }\n}\n\nexport type SheduleActions =\n  GetBookings\n  | GetBookingsSuccess\n  | GetPayments\n  | GetPaymentsSuccess\n  // | GetAnalyticsBookings\n  // | GetAnalyticsBookingsSuccess\n  ;\n","import { Injectable } from '@angular/core';\nimport { Actions, ofType } from '@ngrx/effects';\n\nimport { filter } from 'rxjs/operators';\nimport { EntityAction, ofEntityOp, OP_ERROR, OP_SUCCESS, EntityCacheAction } from '@ngrx/data';\nimport { ToastController } from '@ionic/angular';\nimport { UserActionTypes } from './actions/user.actions';\n\n/** Report ngrx-data success/error actions as toast messages **/\n@Injectable({ providedIn: 'root' })\nexport class EntityToastService {\n  constructor(actions$: Actions, public toastController: ToastController) {\n    actions$\n        .pipe(\n            ofEntityOp(),\n            filter(\n                (ea: EntityAction) => ea.payload.entityOp.endsWith(OP_SUCCESS) || ea.payload.entityOp.endsWith(OP_ERROR),\n            ),\n        )\n        .subscribe((action) =>\n          this.presentToast(`${action.payload.entityName} action - ${action.payload.entityOp}`),\n        );\n\n    actions$\n        .pipe(ofType(EntityCacheAction.SAVE_ENTITIES_SUCCESS, EntityCacheAction.SAVE_ENTITIES_ERROR))\n        .subscribe((action: any) =>\n          this.presentToast(`SaveEntities ${action.type} - url: ${action.payload.url}`),\n        );\n\n    actions$\n        .pipe(ofType(UserActionTypes.LoginFail))\n        .subscribe((action: any) => this.presentToast(`Wrong credentials`));\n\n    actions$\n        .pipe(ofType(UserActionTypes.UpdateUserFail))\n        .subscribe((action: any) => this.presentToast(`Update error`));\n  }\n\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { BookingStepExprs, bookingStepExprs, bookingSteps, BookingSteps,\n  PaymentMethods, paymentMethods, sortFields,\n  SortFields, sortOrders, SortOrders } from 'src/app/interface';\n\nexport const environment = {\n  host: '/',\n  // host: 'https://10.0.2.2:8084/',\n  production: false,\n  paymentMethodsMap: new Map<PaymentMethods, string>(paymentMethods),\n  bookingStepsMap: new Map<BookingSteps, string>(bookingSteps),\n  bookingStepExprsMap: new Map<BookingStepExprs, string>(bookingStepExprs),\n  sortOrdersMap: new Map<SortOrders, string>(sortOrders),\n  sortFieldsMap: new Map<SortFields, string>(sortFields),\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest,\n  HttpResponse, HttpErrorResponse, HttpClient, HttpHeaders,\n} from '@angular/common/http';\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap, tap } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\nimport { State } from '../../store/reducers';\nimport { UserService } from './user.service';\nimport { environment } from 'src/environments/environment';\nimport { Login, LoginSuccess, Logout, LogoutOnFront } from 'src/app/store/actions/user.actions';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class HttpInterceptorRefreshTokenService implements HttpInterceptor {\n  host = environment.host;\n  refreshInProgress = false;\n\n  constructor(\n    private store: Store<State>,\n    private userService: UserService,\n    private http: HttpClient,\n  ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return this.userService.getToken().pipe(\n        switchMap((token) => {\n          if (token) {\n            req = req.clone({\n              headers: req.headers.set('Authorization', token),\n            });\n          }\n          return next.handle(req);\n        }),\n        catchError((err: HttpErrorResponse) => {\n          // catched - some error\n          // console.log('some error catched', err);\n          if (err.status === 401 && !this.refreshInProgress) {\n            // catched access token error\n            // console.log('access token error - catched', err);\n            this.refreshInProgress = true;\n            return this.userService.deviceInfo().pipe(\n                switchMap((deviceInfo) => {\n                  const httpOptions = {\n                    headers: new HttpHeaders({\n                      'Content-Type': 'application/json',\n                    }),\n                    observe: 'response' as 'response',\n                  };\n                    // try to get tokens pair using refresh token\n                  // console.log('try get tokens pair using refresh token');\n                  return this.http.post<string>(\n                      this.host + 'api/user/auth/generate-tokens',\n                      {deviceInfo},\n                      httpOptions,\n                  ).pipe(\n                      catchError((err: HttpErrorResponse) => {\n                      // can't get new pair using refresh token\n                      // logout and throw error\n                        // console.log('error - wrong refresh token', err);\n                        this.refreshInProgress = false;\n                        this.store.dispatch(new LogoutOnFront());\n                        return throwError(err);\n                      }),\n                  );\n                }),\n\n\n                switchMap((refreshResult: HttpResponse<string>) => {\n                  // got new access token result\n                  // console.log('got new access token result');\n                  if (refreshResult.status === 200) {\n                    // access token result status is 200,\n                    // got new access token, try to connect protected with new access token\n                    const token = refreshResult.body;\n                    this.store.dispatch(new LoginSuccess({ token }));\n                    // console.log('status 200, got access token, try to connect protected with new access token');\n                    req = req.clone({\n                      headers: req.headers.set('Authorization', refreshResult.body),\n                    });\n                    this.refreshInProgress = false;\n                    return next.handle(req).pipe(\n                        tap((res) => {\n                          console.log('res', res);\n                        }),\n                        catchError((err) => {\n                          // fail to connect protected with new access token\n                          // throw error, logout\n                          this.store.dispatch(new LogoutOnFront());\n                          return throwError(err);\n                        }),\n                    );\n                  } else {\n                    this.refreshInProgress = false;\n                    // access token result status is not 200\n                    // throw custom error, logout\n                    // console.log('status is not 200 then throw custom error');\n                    this.store.dispatch(new LogoutOnFront());\n                    return throwError(new Error('get new tokens pair error, status not 200'));\n                  }\n                }),\n                // catch((err) => )\n            );\n          } else if (err.status === 401 && this.refreshInProgress) {\n            // console.log('401 error during refreshing (api/user/refresh-token)', err);\n            return throwError(err);\n          } else {\n            // not 401 error throw it\n            // console.log('not 401 error throw it', err);\n            return throwError(err);\n          }\n        }),\n    );\n  }\n}\n\n/* Test -- Refresh token */\n/*   intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    req = req.clone({\n      headers: req.headers.set('api-token', 'wrongToken'),\n    });\n    return next.handle(req).pipe(\n        catchError((err: HttpErrorResponse) => {\n          console.log('some error catched', err);\n          if (err.status === 401 && !this.refreshInProgress) {\n            // access token error - catch\n            console.log('access token error - catched', err);\n            this.refreshInProgress = true;\n            const httpOptions = {\n              headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n              }),\n              observe: 'response' as 'response',\n            };\n            // try to refresh tokens pair using refresh token\n            console.log('try to refresh tokens pair using refresh token');\n            return this.http.get<string>(\n                this.host + 'api/user/refresh-token',\n                httpOptions,\n            )\n                .pipe(\n                    catchError((err: HttpErrorResponse) => {\n                      console.log('error - wrong refresh token', err);\n                      this.refreshInProgress = false;\n                      return throwError(err);\n                    }),\n                    switchMap((refreshResult: HttpResponse<string>) => {\n                    // get new tokens pair\n                      console.log('get new tokens pair');\n                      if (refreshResult.status === 200) {\n                      // status 200, got new tokens pair, try to connect protected with new access token\n                        console.log('status 200, got new tokens pair, try to connect protected with new access token');\n                        req = req.clone({\n                          headers: req.headers.set('api-token', refreshResult.body),\n                        });\n                        this.refreshInProgress = false;\n                        return next.handle(req).pipe(\n                            catchError((res) => {\n                              console.log('res', res);\n                              return throwError(new Error('!!!get new tokens pair error, status not 200'));\n                            }),\n                        );\n                      } else {\n                        this.refreshInProgress = false;\n                        // if status not 200 then throw custom error\n                        console.log('status is not 200 then throw custom error');\n                        return throwError(new Error('get new tokens pair error, status not 200'));\n                      }\n                    }),\n\n                    catchError((err: HttpErrorResponse) => {\n                      console.log('fail to connect protected with new access token', err);\n                      this.refreshInProgress = false;\n                      return throwError(err);\n                    }),\n\n                );\n          } else if (err.status === 401 && this.refreshInProgress) {\n            console.log('401 error during refreshing (api/user/refresh-token)', err);\n            return throwError(err);\n          } else {\n          // just not 401 error throw it\n            console.log('just not 401 error throw it', err);\n            return throwError(err);\n          }\n        }),\n    );\n  }\n} */\n\n\n// return this.userService.getToken()\n//     .pipe(\n//         switchMap((token) => {\n//           console.log('token', token);\n//           if (token) {\n//             req = req.clone({\n//               headers: req.headers\n//                   .set('Authorization', token),\n//             //  .set('Access-Control-Request-Headers', 'Content-type')\n//             //  .set('Access-Control-Request-Method', 'get, options'),\n//             // withCredentials: true,\n//             });\n//           }\n//           return next.handle(req);\n//         }),\n//         catchError((err: HttpErrorResponse) => {\n//           console.log('interceptor - ', err);\n//           if (err.status === 401 && err.error?.message !== 'Помилка refresh' && this.refreshTokenInProgress === false) {\n//             this.refreshTokenInProgress = true;\n//             const httpOptions = {\n//               headers: new HttpHeaders({\n//                 'Content-Type': 'application/json',\n//               }),\n//             };\n//             return this.userService.deviceInfo().pipe(\n//                 switchMap((deviceInfo) => {\n//                   console.log('deviceInfo', deviceInfo);\n//                   return this.http.post<string>(\n//                       this.host + 'api/user/auth/generate-tokens',\n//                       {deviceInfo},\n//                       httpOptions,\n//                   );\n//                 } ),\n//                 mergeMap((token) => {\n//                   console.log('token generated', token);\n\n//                   if (token) {\n//                     console.log('is token', token);\n//                     this.store.dispatch(new Login({ token }));\n//                     req = req.clone({\n//                       headers: req.headers\n//                           .set('Authorization', token),\n//                       //     .set('Access-Control-Request-Headers', 'Content-type')\n//                       //     .set('Access-Control-Request-Method', 'get, options'),\n//                       // withCredentials: true,\n//                     });\n//                     this.refreshTokenInProgress = false;\n//                     return next.handle(req);\n//                   } else {\n//                     this.refreshTokenInProgress = false;\n//                     return throwError(err);\n//                   }\n//                 } ),\n//                 catchError((err: HttpErrorResponse) => {\n//                   console.log('interceptor2 - ', err);\n//                   this.refreshTokenInProgress = false;\n//                   this.store.dispatch(new Logout());\n//                   return throwError(err);\n//                 }),\n//             );\n//           //     if (err.error.message == \"Token is exp\") {\n//           //       //TODO: Token refreshing\n//           //     } else {\n//           //       //Logout from account or do some other stuff\n//           //     }\n//           } else {\n//             this.refreshTokenInProgress = false;\n//             console.log('interceptor3 - ', err);\n\n//             return throwError(err);\n//           }\n//         }),\n//     );\n//   }\n// }\n","import { NgModule } from '@angular/core';\nimport { DefaultDataServiceConfig, EntityDataModule, EntityDataService } from '@ngrx/data';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { reducers, metaReducers } from './reducers';\n\nimport { OperatorDataService } from './operator-data.service';\nimport { entityMetadata } from './entity-metadata';\nimport { EntityToastService } from './store-toast.service';\nimport { SheduleEffects } from './effects/shedule.effects';\nimport { UserEffects } from './effects/user.effects';\nimport { environment } from 'src/environments/environment';\n\nexport const defaultDataServiceConfig: DefaultDataServiceConfig = {\n  root: environment.host + 'api/store',\n  timeout: 3000,\n  entityHttpResourceUrls: {\n    Operator: {\n      entityResourceUrl: environment.host + 'api/store/operator/',\n      collectionResourceUrl: environment.host + 'api/store/operators/',\n    },\n    Room: {\n      entityResourceUrl: environment.host + 'api/store/room/',\n      collectionResourceUrl: environment.host + 'api/store/rooms/',\n    },\n  },\n};\n\n@NgModule({\n  imports: [\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true,\n      },\n    }),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    EffectsModule.forRoot([SheduleEffects, UserEffects]),\n    EntityDataModule.forRoot({ entityMetadata }),\n  ],\n  providers: [\n    OperatorDataService,\n    { provide: DefaultDataServiceConfig, useValue: defaultDataServiceConfig },\n  ],\n\n})\n\nexport class AppStoreModule {\n  constructor(\n      entityDataService: EntityDataService,\n      operatorDataService: OperatorDataService,\n      entityToastService: EntityToastService,\n  ) {\n    entityDataService.registerService('Operator', operatorDataService);\n  }\n}\n\n","import { Type } from '@angular/core';\nimport { AbstractControlOptions, AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\n\nexport const paymentMethods = [\n  ['cash', 'Cash'],\n  ['card', 'Card'],\n] as const;\nexport type PaymentMethods = typeof paymentMethods[number][0];\n\nexport const bookingSteps = [\n  [null, 'All'],\n  ['preorder', 'Preorder'],\n  ['reserved', 'Reserved'],\n  ['paid', 'Paid'],\n  ['cancelled', 'Cancelled'],\n] as const;\nexport type BookingSteps = typeof bookingSteps[number][0];\n\nexport const bookingStepExprs = [\n  ['$eq', 'Equal'],\n  ['$ne', 'Not Equal'],\n] as const;\nexport type BookingStepExprs = typeof bookingStepExprs[number][0];\n\nexport const sortOrders = [\n  [1, 'Ascending'],\n  [-1, 'Descending'],\n] as const;\nexport type SortOrders = typeof sortOrders[number][0];\n\nexport const sortFields = [\n  ['bookingStep', 'Booking Step'],\n  ['dates.from', 'Date from'],\n  ['dates.to', 'Date to'],\n  ['price', 'Price'],\n] as const;\nexport type SortFields = typeof sortFields[number][0];\n\n\nexport interface DateRange {\n  lower: number;\n  upper: number;\n}\n\nexport interface DateRangeLimits {\n  lower: string;\n  upper: string;\n}\n\nexport interface Knobs {\n  lower: number;\n  upper: number;\n}\n\nexport interface Payment {\n  _id: string;\n  date: string;\n  amount: number;\n  paymentMethod: PaymentMethods;\n}\n\nexport interface PaymentQuery {\n  dateRangeLimits: DateRangeLimits | null;\n  room_id?: string | null;\n  paymentMethod?: string | null;\n}\n\nexport interface Booking {\n  _id: string;\n  room_id: string;\n  guestName: string;\n  guestPhone: string;\n  guestEmail: string;\n  price: number;\n  discount: number;\n  bookingStep: BookingSteps;\n  dates: {\n    from: string;\n    to: string;\n  };\n  payments: Payment[];\n  info?: string;\n  totalPaid?: number; // virtuals\n  balance?: number; // virtuals\n}\n\nexport interface BookingQuery {\n  dateRangeLimits: DateRangeLimits | null;\n  room_id?: string | null;\n  bookingStep?: {\n    expr: string;\n    val: BookingSteps;\n  } | null;\n  sort?: { field: string, order: SortOrders} | null;\n  skip?: number | null;\n  limit?: number | null;\n}\n\nexport interface Room {\n  _id?: string;\n  name: string;\n  price: number;\n  bookings?: Booking[] | string[];\n}\n\nexport interface Company {\n  _id: string;\n  users?: User[] | string[];\n  companyName: string;\n  rooms: Room[];\n}\n\n// export interface CompanyWithBookings {\n//   _id: string;\n//   companyName: string;\n//   rooms: Room;\n//   bookings: Booking[];\n// }\n\nexport interface User {\n  _id?: string;\n  login: string;\n  password?: string;\n  email?: string;\n  loading?: boolean;\n  role?: string;\n  activated?: boolean;\n  blocked?: boolean;\n  uniqueId?: any;\n  v?: number;\n}\n\nexport interface CompanySignup {\n  companyName: string;\n  user: User;\n}\n\nexport interface FormFieldOptions {\n  title: string;\n  subTitle: string;\n  iconName: string;\n  inputLable: string;\n  inputType?: string;\n  errors: Map<string, string>;\n  formControl: {\n    formState: any;\n    validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions;\n    asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n  }\n}\n\nexport type UpdateOn = 'change' | 'blur' | 'submit';\nexport type RoomFormFields = 'price' | 'name';\nexport type OperatorFormFields = 'email';\n","import { Component, OnInit, Renderer2 } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { UserService } from './modules/user/user.service';\nimport { Router } from '@angular/router';\n\nimport { Store } from '@ngrx/store';\nimport { State } from './store/reducers';\nimport { GetUser, Logout } from './store/actions/user.actions';\nimport { User } from './interface';\nimport { getUser } from './store/reducers/user.reducer';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    private userService: UserService,\n    private router: Router,\n    private store: Store<State>,\n    private renderer: Renderer2,\n  ) {\n    this.initializeApp();\n  }\n\n  ngOnInit() {\n    /* Test -- Refresh token */\n    /*     this.userService.protected()\n        .subscribe(\n            (protectedResult) => console.log('protectedResult', protectedResult),\n            (err) => console.log('protectedError', err),\n        ); */\n\n    // Manualy set light theme mode\n    this.renderer.setAttribute(document.body, 'color-theme', 'light');\n\n    this.store.dispatch(new GetUser());\n    this.store.select(getUser)\n        .subscribe((user) => {\n          this.user = user;\n        });\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n","export default \"<ion-app>\\n  \\n<ion-router-outlet></ion-router-outlet>\\n\\n</ion-app>\";","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { reducers, metaReducers } from './store/reducers';\nimport { UserEffects } from './store/effects/user.effects';\nimport { SheduleEffects } from './store/effects/shedule.effects';\nimport { AppStoreModule } from './store/store.module';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { environment } from '../environments/environment';\nimport { HttpInterceptorService } from './modules/user/http-interceptor.service';\nimport { HttpInterceptorRefreshTokenService } from './modules/user/http-interceptor.-refresh-token.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    // StoreModule.forRoot(reducers, {\n    //   metaReducers,\n    //   runtimeChecks: {\n    //     strictStateImmutability: true,\n    //     strictActionImmutability: true,\n    //   },\n    // }),\n    // EffectsModule.forRoot([SheduleEffects, UserEffects]),\n    // StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    AppStoreModule,\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorService, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorRefreshTokenService, multi: true },\n    CookieService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormControl, ValidationErrors, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Plugins } from '@capacitor/core';\nconst { Storage, Device } = Plugins;\n\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\n\nimport { Company, CompanySignup, User } from '../../interface';\nimport { State } from '../../store/reducers';\nimport { Login, LoginSuccess, Logout, Redirection } from '../../store/actions/user.actions';\nimport { redirectionUrl } from '../../store/reducers/user.reducer';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  host = environment.host;\n\n  constructor(\n    private http: HttpClient,\n    private store: Store<State>,\n    private router: Router,\n    private cookieService: CookieService,\n  ) {\n    this.store.select(redirectionUrl)\n        .subscribe((url) => {\n          if (url) {\n            this.router.navigateByUrl(url);\n            this.store.dispatch(new Redirection({redirectionUrl: null}));\n          }\n        });\n  }\n\n  deviceInfo() {\n    return from(Device.getInfo());\n  }\n\n  getCookie(name: string) {\n    const cookie = this.cookieService.get(name);\n    return cookie;\n  }\n\n  getUser(): Observable< User|null > {\n    return from(Storage.get({key: 'token'}))\n        .pipe(\n            map((token) => {\n              const jwtHelper = new JwtHelperService();\n              if (token?.value && !jwtHelper.isTokenExpired(token.value)) {\n                const user = jwtHelper.decodeToken(token.value);\n                return user;\n              }\n              return null;\n            }),\n        );\n  }\n\n  sendActivationCode(_id: string): Observable <null> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.get<null>(\n        this.host + 'api/user/send-activation-code/' + _id,\n        httpOptions,\n    );\n  }\n\n  activateUser(payload: {_id: string, code: number}): Observable<string> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.put<string>(\n        this.host + 'api/user/activate-user/' + payload._id,\n        { code: payload.code },\n        httpOptions,\n    );\n  }\n\n  updateUser(update: Partial<User> & Required<{ _id: string }>): Observable<string> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.put<string>(\n        this.host + 'api/user/updateUser/' + update._id,\n        update,\n        httpOptions,\n    );\n  }\n\n  getCompanyByUser(): Observable<Company | null> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.get<Company>(\n        this.host + 'api/user/get-company-by-user',\n        httpOptions,\n    );\n  }\n\n  logout(): Observable<void> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.deviceInfo().pipe(\n        switchMap((deviceInfo) => this.http.put<void>(\n            this.host + 'api/user/logout',\n            { deviceInfo },\n            httpOptions,\n        )),\n        // tap((_) => this.store.dispatch(new Logout())),\n    );\n\n    // return this.http.get<null>(\n    //     this.host + 'api/user/logout',\n    //     httpOptions,\n    // ).pipe(\n    //     tap((_) => this.store.dispatch(new Logout())),\n    // );\n  }\n\n  generateTokens(): Observable<string> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.get<string>(\n        this.host + 'api/user/auth/generate-tokens',\n        httpOptions,\n    );\n  }\n\n  login(user: User): Observable<string> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n\n    return this.deviceInfo().pipe(\n        switchMap((deviceInfo) => this.http.post<string>(\n            this.host + 'api/user/login',\n            {...user, deviceInfo},\n            httpOptions,\n        )),\n        // map((token) => this.store.dispatch(new Login({token, redirectionUrl: '/'}))),\n    );\n  }\n\n  createCompany(companySignup: CompanySignup): Observable<void> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.post<string>(\n        this.host + 'api/user/create-company',\n        companySignup,\n        httpOptions,\n    ).pipe(\n        map((token) => this.store.dispatch(new LoginSuccess({ token, redirectionUrl: '/' }))),\n    );\n  }\n\n  \n  createCompanyUser(user: User): Observable<void> {\n    return this.getToken()\n        .pipe(\n            switchMap((token) => {\n              const httpOptions = {\n                headers: new HttpHeaders({\n                  'Content-Type': 'application/json',\n                  // 'Authorization': token,\n                }),\n              };\n              return this.http.post<null>(\n                  this.host + 'api/user/create-company-user',\n                  user,\n                  httpOptions,\n              );\n            }),\n            tap((createCompanyUser) => console.log('createCompanyUser', createCompanyUser)),\n        );\n  }\n\n  removeToken(): Observable<void> {\n    return from(Storage.remove({ key: 'token' }));\n  }\n\n  setToken(token: string): Observable<void> {\n    return from(Storage.set({ key: 'token', value: token }));\n  }\n\n  getToken(): Observable<string> {\n    return from(Storage.get({ key: 'token' })).pipe(\n        map((token) => {\n          if (token) {\n            return token.value;\n          } else {\n            return null;\n          }\n        }),\n    );\n  }\n\n  /* forms */\n  emailFormControl(formState: any = '') {\n    return new FormControl(\n        formState,\n        {\n          updateOn: 'blur',\n          validators: [\n            Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n            Validators.required,\n          ],\n          asyncValidators: [\n            this.checkEmailUnique(),\n          ],\n        });\n  }\n\n  /* async validators */\n\n  checkCompanyNameUnique(): AsyncValidatorFn {\n    return (abstractControl: AbstractControl): Observable < ValidationErrors | null > => {\n      const companyName = abstractControl.value;\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n        }),\n        params: new HttpParams()\n            .set('companyName', companyName),\n      };\n      return this.http.get< string | null >(\n          this.host + 'api/user/is-company-name-unique',\n          httpOptions,\n      )\n          .pipe(\n              tap((companyName) => console.log('companyName', companyName)),\n              catchError((err) => {\n                return of(err);\n              }),\n              map((result) => {\n                return result ? { notUnique: true } : null;\n              }),\n          );\n    };\n  }\n\n  checkLoginUnique(): AsyncValidatorFn {\n    return (abstractControl: AbstractControl): Observable<ValidationErrors | null> => {\n      const login = abstractControl.value;\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n        }),\n        params: new HttpParams()\n            .set('login', login),\n      };\n      return this.http.get<string | null>(\n          this.host + 'api/user/is-login-unique',\n          httpOptions,\n      )\n          .pipe(\n              catchError((err) => {\n                return of(err);\n              }),\n              map((result) => {\n                return result ? { notUnique: true } : null;\n              }),\n          );\n    };\n  }\n\n  checkEmailUnique(): AsyncValidatorFn {\n    return (abstractControl: AbstractControl): Observable<ValidationErrors | null> => {\n      const email = abstractControl.value;\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n        }),\n        params: new HttpParams()\n            .set('email', email),\n      };\n      return this.http.get<string | null>(\n          this.host + 'api/user/is-email-unique',\n          httpOptions,\n      )\n          .pipe(\n              catchError((err) => {\n                return of(err);\n              }),\n              map((result) => {\n                return result ? { notUnique: true } : null;\n              }),\n          );\n    };\n  }\n\n  // sync validator\n  matchPassword(abstractControl: AbstractControl): ValidationErrors | null {\n    const password = abstractControl.get('password').value;\n    const passwordConfirm = abstractControl.get('passwordConfirm').value;\n    if (password === passwordConfirm) {\n      abstractControl.get('passwordConfirm').setErrors(null);\n      return null;\n    } else {\n      /**\n       * set error to 'passwordConfirm' element\n       */\n\n      abstractControl.get('passwordConfirm').setErrors({ mismatch: true });\n      /**\n       * and don't set error (null) to formGroup\n       */\n      return null;\n    }\n  }\n\n\n  // companyUsers entity\n  getCompanyUsers(users_id: string[]): Observable<User[]> {\n    return from(Storage.get({ key: 'token' }))\n        .pipe(\n            switchMap((token) => {\n              const httpOptions = {\n                headers: new HttpHeaders({\n                  'Content-Type': 'application/json',\n                  // 'Authorization': token.value,\n                }),\n                params: new HttpParams()\n                    .set('users_id', JSON.stringify(users_id)),\n              };\n              return this.http.get<User[]>(\n                  this.host + 'api/user/get-company-users',\n                  httpOptions,\n              );\n            }),\n            tap((getCompanyUsers) => console.log('getCompanyUsers', getCompanyUsers)),\n        );\n  }\n\n  addCompanyUser(_id: string) {\n  }\n\n  updateCompanyUser(_id: string) {\n  }\n\n  deleteCompanyUser(_id: string) {\n  }\n\n  /* Test -- refresh token */\n  // protected() {\n  //   const httpOptions = {\n  //     headers: new HttpHeaders({\n  //       'Content-Type': 'application/json',\n  //     }),\n  //   };\n  //   return this.http.get<User[]>(\n  //       this.host + 'api/user/protected',\n  //       httpOptions,\n  //   );\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap, tap } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\nimport { State } from '../../store/reducers';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class HttpInterceptorService implements HttpInterceptor {\n  constructor(\n    private store: Store<State>,\n    private userService: UserService,\n  ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler):\n    Observable<HttpEvent<any>> {\n    // to modify request\n    // req = req.clone();\n    // return next.handle(req);\n\n    // modify response\n    return next.handle(req).pipe(\n        tap((event: HttpEvent<any>) => {\n          if (event instanceof HttpResponse) {\n            // console.log('event', event.headers.get('Content-language'));\n\n            // event = event.clone({ body: this.modifyBody(event.body) });\n          }\n          return event;\n        }),\n\n    );\n  }\n\n\n  private modifyBody(body: any) {\n    /*\n    * write your logic to modify the body\n    * */\n    return body;\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { Action } from '@ngrx/store';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, catchError, tap, mergeMap } from 'rxjs/operators';\n\nimport {\n// UserActionTypes, GetUser, Authenticated, NotAuthenticated, AuthError, Redirection,\n// CompanyAuthenticated, Logout, Login, GetCompanyByUser, UpdateUser, UpdateUserFail, UpdateUserSuccess,\n} from '../actions/user.actions';\n\nimport * as fromUserActions from '../actions/user.actions';\nimport { UserService } from '../../modules/user/user.service';\n\n@Injectable()\nexport class UserEffects {\n  @Effect()\n  getUser: Observable<Action | Action[]> = this.actions$.pipe(\n      ofType(fromUserActions.UserActionTypes.GetUser),\n      map((action: fromUserActions.GetUser) => action.payload),\n      switchMap((payload) => this.userService.getUser().pipe(\n          switchMap((user) => {\n            let actions: Action[];\n            if (user) {\n              // User logged in\n              actions = [new fromUserActions.Authenticated({ user }), new fromUserActions.GetCompanyByUser()];\n            } else {\n              // User not logged in\n              actions = [new fromUserActions.NotAuthenticated()];\n            }\n            if (payload) {\n              actions.push(new fromUserActions.Redirection({ redirectionUrl: payload }));\n            }\n            return actions;\n          }),\n          catchError((err) => [new fromUserActions.AuthError(), new fromUserActions.Logout()]),\n      )),\n  );\n\n  @Effect()\n  getCompanyByUser: Observable<Action | Action[]> = this.actions$.pipe(\n      ofType(fromUserActions.UserActionTypes.GetCompanyByUser),\n      switchMap((payload) => this.userService.getCompanyByUser().pipe(\n          map((company) => {\n            if (company) {\n              return new fromUserActions.CompanyAuthenticated({ company });\n            } else {\n              // Did't get company -> Logout\n              return new fromUserActions.Logout();\n            }\n          }),\n          catchError((err) => [new fromUserActions.AuthError(), new fromUserActions.Logout()]),\n      )),\n  );\n\n  @Effect()\n  activateUser: Observable<Action | Action[]> = this.actions$.pipe(\n      ofType(fromUserActions.UserActionTypes.ActivateUser),\n      map((action: fromUserActions.ActivateUser) => action.payload),\n      switchMap((payload) => this.userService.activateUser(payload).pipe(\n          map((token) => new fromUserActions.LoginSuccess({ token })),\n          catchError((err) => of(new fromUserActions.UpdateUserFail(err))),\n      )),\n  );\n\n  @Effect()\n  login: Observable<Action | Action[]> = this.actions$.pipe(\n      ofType(fromUserActions.UserActionTypes.Login),\n      map((action: fromUserActions.Login) => action.payload),\n      switchMap((payload) => this.userService.login(payload.user).pipe(\n          map((token) => new fromUserActions.LoginSuccess({ token, redirectionUrl: '/' })),\n          catchError((err) => of(new fromUserActions.LoginFail(err))),\n      )),\n  );\n\n  @Effect()\n  updateUser: Observable<Action | Action[]> = this.actions$.pipe(\n      ofType(fromUserActions.UserActionTypes.UpdateUser),\n      map((action: fromUserActions.UpdateUser) => action.payload),\n      switchMap((payload) => this.userService.updateUser(payload).pipe(\n          map((token) => new fromUserActions.LoginSuccess({ token })),\n          catchError((err) => of(new fromUserActions.UpdateUserFail(err))),\n\n      )),\n  );\n\n  @Effect()\n  loginSuccess: Observable<Action | Action[]> = this.actions$.pipe(\n      ofType(fromUserActions.UserActionTypes.LoginSuccess),\n      map((action: fromUserActions.LoginSuccess) => action.payload),\n      switchMap((payload) => this.userService.setToken(payload.token).pipe(\n          map((_) => new fromUserActions.GetUser(payload.redirectionUrl ? payload.redirectionUrl : null)),\n          catchError((err) => of(new fromUserActions.AuthError())),\n      )),\n  );\n\n  @Effect()\n  logout: Observable<Action | Action[]> = this.actions$.pipe(\n      ofType(fromUserActions.UserActionTypes.Logout),\n      switchMap(() => this.userService.logout().pipe(\n          switchMap(() => this.userService.removeToken()),\n          map((_) => new fromUserActions.GetUser('/user/login')),\n          catchError((err) => of(new fromUserActions.AuthError())),\n      )),\n  );\n\n  @Effect()\n  logoutOnFront: Observable<Action | Action[]> = this.actions$.pipe(\n      ofType(fromUserActions.UserActionTypes.LogoutOnFront),\n      switchMap(() => this.userService.removeToken().pipe(\n          map((_) => new fromUserActions.GetUser('/user/login')),\n          catchError((err) => of(new fromUserActions.AuthError())),\n      )),\n  );\n\n\n  constructor(\n    private actions$: Actions,\n    private userService: UserService,\n  ) { }\n}\n","import { EntityMetadataMap, EntityDataModuleConfig } from '@ngrx/data';\n\nexport const entityMetadata: EntityMetadataMap = {\n  Operator: {\n    selectId: (operator) => operator._id,\n    entityDispatcherOptions: {\n      optimisticAdd: false,\n      optimisticUpdate: false,\n      optimisticDelete: false,\n    },\n  },\n  Room: {\n    selectId: (room) => room._id,\n    entityDispatcherOptions: {\n      optimisticAdd: false,\n      optimisticUpdate: false,\n      optimisticDelete: false,\n    },\n  },\n};\n\nconst pluralNames = {\n  Operator: 'Operators',\n  Room: 'Rooms',\n};\n\nexport const entityConfig: EntityDataModuleConfig = {\n  entityMetadata,\n  pluralNames,\n};\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DefaultDataService, HttpUrlGenerator } from '@ngrx/data';\nimport { Observable } from 'rxjs';\nimport { User } from '../interface';\n\n@Injectable()\n\nexport class OperatorDataService extends DefaultDataService<User> {\n  constructor(http: HttpClient, httpUrlGenerator: HttpUrlGenerator) {\n    super('Operator', http, httpUrlGenerator);\n  }\n  getAll(): Observable<User[]> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-language': 'en-US',\n      }),\n    };\n    const urlPath = this.httpUrlGenerator.collectionResource('Operator', '');\n    console.log('urlPath', urlPath);\n    return this.http.get<User[]>(urlPath, httpOptions);\n  }\n}\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","import { Action } from '@ngrx/store';\nimport { Company, User } from '../../interface';\n\nexport enum UserActionTypes {\n  GetUser = '[User] Get user',\n  GetCompanyByUser = '[User] Get company by user',\n  LogoutOnFront = '[User] LogoutOnFront',\n\n  CompanyAuthenticated = '[User] Company Authenticated',\n  Authenticated = '[User] Authenticated',\n  NotAuthenticated = '[User] Not Authenticated',\n  Redirection = '[User] Redirection',\n  AuthError = '[User] Error',\n\n  UpdateUser = '[User] Update user',\n  UpdateUserSuccess = '[User] Update user success',\n  UpdateUserFail = '[User] Update user fail',\n\n  ActivateUser = '[User] Activate user',\n\n  Login = '[User] Login',\n  LoginSuccess = '[User] Login Success',\n  LoginFail = '[User] Login Fail',\n\n  Logout = '[User] Logout',\n}\n\n// Get User AuthState\nexport class GetUser implements Action {\n  readonly type = UserActionTypes.GetUser;\n  constructor(public payload?: string ) { }\n}\n\nexport class GetCompanyByUser implements Action {\n  readonly type = UserActionTypes.GetCompanyByUser;\n}\n\nexport class CompanyAuthenticated implements Action {\n  readonly type = UserActionTypes.CompanyAuthenticated;\n  constructor(public payload: { company: Company }) { }\n}\n\nexport class Authenticated implements Action {\n  readonly type = UserActionTypes.Authenticated;\n  constructor(public payload: { user: User }) { }\n}\n\nexport class NotAuthenticated implements Action {\n  readonly type = UserActionTypes.NotAuthenticated;\n}\n\nexport class Redirection implements Action {\n  readonly type = UserActionTypes.Redirection;\n  constructor(public payload?: { redirectionUrl: string }) { }\n}\n\nexport class AuthError implements Action {\n  readonly type = UserActionTypes.AuthError;\n}\n\nexport class Login implements Action {\n  readonly type = UserActionTypes.Login;\n  constructor(public payload: { user: User }) { }\n}\n\nexport class LoginSuccess implements Action {\n  readonly type = UserActionTypes.LoginSuccess;\n  constructor(public payload: { token: string, redirectionUrl?: string }) { }\n}\n\nexport class LoginFail implements Action {\n  readonly type = UserActionTypes.LoginFail;\n  constructor(public payload?: any) { }\n}\n\nexport class Logout implements Action {\n  readonly type = UserActionTypes.Logout;\n}\n\nexport class LogoutOnFront implements Action {\n  readonly type = UserActionTypes.LogoutOnFront;\n}\n\nexport class ActivateUser implements Action {\n  readonly type = UserActionTypes.ActivateUser;\n  constructor(public payload: { _id: string, code: number }) { }\n}\n\nexport class UpdateUser implements Action {\n  readonly type = UserActionTypes.UpdateUser;\n  constructor(public payload: Partial<User> & Required<{_id: string}>) { }\n}\nexport class UpdateUserFail implements Action {\n  readonly type = UserActionTypes.UpdateUserFail;\n  constructor(public payload?: any) { }\n}\n\nexport type UserActions\n  = GetUser\n  | GetCompanyByUser\n  | CompanyAuthenticated\n  | Authenticated\n  | NotAuthenticated\n  | Redirection\n  | AuthError\n  | Logout\n  | LogoutOnFront\n  | Login\n  | LoginSuccess\n  | LoginFail\n  | UpdateUser\n  | UpdateUserFail;\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { Company, User } from '../../interface';\nimport { UserActions, UserActionTypes } from '../actions/user.actions';\n\nexport const userFeatureKey = 'user';\n\nexport interface UserState {\n  user: User | null;\n  company: Company | null,\n  loading: boolean;\n  redirectionUrl: string | null;\n}\n\nexport const initialState: UserState = {\n  user: null,\n  company: null,\n  loading: false,\n  redirectionUrl: null,\n};\n\nexport function reducer(state = initialState, action: UserActions): UserState {\n  // console.log('screen reducer');\n\n  switch (action.type) {\n    // fires and then effect fires on same action to fetch data\n    // here is only for set loading to true (e. g. to show spinner)\n    case UserActionTypes.GetUser:\n      return { ...state, loading: true };\n\n    case UserActionTypes.GetCompanyByUser:\n      return { ...state };\n\n    case UserActionTypes.CompanyAuthenticated:\n      return { ...state, company: action.payload.company, loading: false };\n\n    case UserActionTypes.Authenticated:\n      return { ...state, user: { ...action.payload.user }, redirectionUrl: null, loading: false };\n\n    case UserActionTypes.NotAuthenticated:\n      return { ...state, user: initialState.user, company: initialState.company, redirectionUrl: '/user/login', loading: false };\n\n    case UserActionTypes.Redirection:\n      return { ...state, redirectionUrl: action.payload.redirectionUrl };\n\n    case UserActionTypes.AuthError:\n      return { ...state, user: initialState.user, company: initialState.company, redirectionUrl: '/user/login', loading: false };\n\n    default:\n      return state;\n  }\n}\n\nconst featureSelector = createFeatureSelector<UserState>(userFeatureKey);\n\nexport const getCompany = createSelector(featureSelector, (state) => state.company);\nexport const getUser = createSelector(featureSelector, (state) => state.user);\nexport const redirectionUrl = createSelector(featureSelector, (state) => state.redirectionUrl);\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Observable, ReplaySubject } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\n\nimport { State } from '../../store/reducers';\nimport { Booking, BookingQuery, DateRangeLimits, Payment, PaymentQuery, Room, User } from '../../interface';\nimport { environment } from 'src/environments/environment';\n\nimport * as fns from 'date-fns';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class SheduleService {\n  user: User;\n  environment = environment;\n\n  constructor(\n    private http: HttpClient,\n    private store: Store<State>,\n\n  ) {\n    this.store.select('user')\n        .subscribe((storeState) => {\n          this.user = storeState.user;\n        });\n  }\n\n  /* Date helpers */\n\n  // deprecated use convertISOToDate\n  // '2020-12-01' => Tue Dec 01 2020 00:00:00 GMT-1000\n  convertShortToDate(short: string): Date {\n    return fns.parseISO(short);\n  }\n\n  // '2020-12-01T00:00:00.000Z' => Tue Dec 01 2020 00:00:00 GMT-1000\n  convertISOToDate(ISOorShort: string): Date {\n    if (ISOorShort.length > 10) {\n      // convert from ISO full format\n      return fns.parseISO(ISOorShort.substring(0, 10));\n    } else {\n      // convert from short date format\n      return fns.parseISO(ISOorShort);\n    }\n  }\n\n  convertISOToShort(ISO: string): string {\n    return ISO.substring(0, 10);\n  }\n\n  // Tue Dec 01 2020 00:00:00 GMT-1000 => '2020-12-01'\n  convertDateToShort(date: Date): string {\n    return fns.formatISO(date, { representation: 'date' });\n  }\n\n  convertBookingDatesIsoToShort(booking: Booking): Booking {\n    return {\n      ...booking,\n      dates: {\n        from: this.convertISOToShort(booking.dates.from),\n        to: this.convertISOToShort(booking.dates.to),\n      },\n      payments: booking.payments.map((payment) => {\n        return {\n          ...payment,\n          date: this.convertISOToShort(payment.date),\n        };\n      }),\n    };\n  }\n\n\n  createDateRangeLimits(date: Date): DateRangeLimits {\n    const daysInMonth = fns.getDaysInMonth(date);\n    const startOfMonth = fns.startOfMonth(date);\n    const endOfMonth = fns.add(startOfMonth, { days: daysInMonth - 1 });\n    return {\n      lower: this.convertDateToShort(startOfMonth),\n      upper: this.convertDateToShort(endOfMonth),\n    };\n  }\n  /* End of date helpers */\n\n\n  /* new */\n\n  getRoomById(id: string): Observable<Room> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.get<Room>(\n        this.environment.host + 'api/reservation/get-room-by-id/' + id,\n        httpOptions,\n    );\n  }\n\n  getBookingById(id: string): Observable<Booking> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.get<Booking>(\n        this.environment.host + 'api/reservation/get-booking-by-id/' + id,\n        httpOptions,\n    );\n  }\n\n  getAvailableDateTo(room_id: string, dateFrom: string): Observable<string> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        // 'Authorization': token.value,\n      }),\n      params: new HttpParams()\n          .set('roomid', room_id)\n          .set('datefrom', dateFrom),\n    };\n    return this.http.get<string>(\n        this.environment.host + 'api/reservation/get-available-date-to',\n        httpOptions,\n    );\n  }\n\n  deleteBooking(_id: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.delete<void>(\n        this.environment.host + 'api/reservation/delete-booking/' + _id,\n        httpOptions,\n    );\n  }\n\n  getBookings(bookingQuery: BookingQuery): Observable <Booking[]> {\n    const params = new HttpParams()\n        .set('bookingQuery', JSON.stringify(bookingQuery));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n      params,\n    };\n    return this.http.get<Booking[]>(\n        this.environment.host + 'api/reservation/get-bookings',\n        httpOptions,\n    );\n  }\n\n  getPayments(paymentQuery: PaymentQuery): Observable<Payment[]> {\n    const params = new HttpParams()\n        .set('paymentQuery', JSON.stringify(paymentQuery));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n      params,\n    };\n    return this.http.get<Payment[]>(\n        this.environment.host + 'api/reservation/get-payments',\n        httpOptions,\n    );\n  }\n\n  upsertBooking(booking: Booking) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.put<any>(\n        this.environment.host + 'api/reservation/upsert-booking',\n        booking,\n        httpOptions,\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { SheduleActionTypes, GetBookings, GetBookingsSuccess, GetPaymentsSuccess, GetPayments } from '../actions/shedule.actions';\n\nimport { SheduleService } from '../../modules/shedule/shedule.service';\n\n@Injectable()\nexport class SheduleEffects {\n  @Effect()\n  getBookings: Observable<Action> = this.actions$.pipe(\n      ofType(SheduleActionTypes.GetBookings),\n      switchMap((action: GetBookings) => {\n        return this.sheduleService.getBookings(action.payload).pipe(\n            map((bookings) => new GetBookingsSuccess(bookings)),\n        );\n      }),\n  );\n\n  // @Effect()\n  // getAnalyticsBookings: Observable<Action> = this.actions$.pipe(\n  //     ofType(SheduleActionTypes.GetAnalyticsBookings),\n  //     switchMap((action: GetAnalyticsBookings) => {\n  //       return this.sheduleService.getBookings(action.payload).pipe(\n  //           map((bookings) => new GetAnalyticsBookingsSuccess(bookings)),\n  //       );\n  //     }),\n  // );\n\n  @Effect()\n  getPayments: Observable<Action> = this.actions$.pipe(\n      ofType(SheduleActionTypes.GetPayments),\n      switchMap((action: GetPayments) => {\n        return this.sheduleService.getPayments(action.payload).pipe(\n            map((payments) => new GetPaymentsSuccess(payments)),\n        );\n      }),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private sheduleService: SheduleService,\n  ) { }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { Booking, Payment } from '../../interface';\nimport { SheduleActions, SheduleActionTypes } from '../actions/shedule.actions';\n\nexport const sheduleFeatureKey = 'shedule';\n\nexport interface SheduleState {\n  bookings: Booking[];\n  // analyticsBookings: Booking[];\n  payments: Payment[];\n}\n\nexport const initialState: SheduleState = {\n  bookings: [],\n  payments: [],\n  // analyticsBookings: [],\n};\n\nexport function reducer(state = initialState, action: SheduleActions): SheduleState {\n  switch (action.type) {\n    case SheduleActionTypes.GetBookingsSuccess: {\n      return { ...state, bookings: action.payload };\n    }\n    // case SheduleActionTypes.GetAnalyticsBookingsSuccess: {\n    //   return { ...state, analyticsBookings: action.payload };\n    // }\n    case SheduleActionTypes.GetPaymentsSuccess: {\n      return { ...state, payments: action.payload };\n    }\n    default:\n      return state;\n  }\n}\n\nconst featureSelector = createFeatureSelector<SheduleState>(sheduleFeatureKey);\n\nexport const getBookings = createSelector(featureSelector, (state) => state.bookings);\n// export const getAnalyticsBookings = createSelector(featureSelector, (state) => state.analyticsBookings);\nexport const getPayments = createSelector(featureSelector, (state) => state.payments);\n","import { ActionReducerMap, MetaReducer } from '@ngrx/store';\n\nimport { environment } from '../../../environments/environment';\nimport * as fromShedule from './shedule.reducer';\nimport * as fromUser from './user.reducer';\n\nexport interface State {\n  shedule: fromShedule.SheduleState;\n  user: fromUser.UserState;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  shedule: fromShedule.reducer,\n  user: fromUser.reducer,\n};\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  // {\n  //   path: '',\n  //   redirectTo: '/tabs/shedule',\n  //   pathMatch: 'full',\n  // },\n  // {\n  //   path: 'shedule',\n  //   loadChildren: () => import('./shedule/shedule.module').then( (m) => m.ShedulePageModule),\n  // },\n  // {\n  //   path: 'user',\n  //   loadChildren: () => import('./user/user.module').then( (m) => m.UserPageModule),\n  // },\n  // {\n  //   path: 'analytics',\n  //   loadChildren: () => import('./analytics/analytics.module').then( (m) => m.AnalyticsPageModule),\n  // },\n  {\n    path: '',\n    loadChildren: () => import('./tabs/tabs.module').then( (m) => m.TabsPageModule),\n  },\n  {\n    path: '**',\n    redirectTo: '',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\n\n\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}