{"version":3,"sources":["./src/app/modules/user/login-form/login-form.page.ts","./src/app/modules/user/login-form/signup-form/signup-form.component.html","./src/app/modules/user/login-form/login-form.module.ts","./src/app/modules/user/login-form/signup-form/signup-form.component.ts","./src/app/modules/user/no-auth.guard.ts","./src/app/modules/user/login-form/login-form.page.scss","./src/app/modules/user/login-form/signup-form/signup-form.component.scss","./src/app/modules/user/login-form/login-form.page.html","./src/app/modules/user/login-form/login-form-routing.module.ts"],"names":[],"mappings":"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","file":"login-form-login-form-module.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { User } from 'src/app/interface';\nimport { Login } from 'src/app/store/actions/user.actions';\nimport { State } from 'src/app/store/reducers';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.page.html',\n  styleUrls: ['./login-form.page.scss'],\n})\nexport class LoginFormPage implements OnInit {\n  loginForm: FormGroup;\n  inputType: 'password' | 'text' = 'password';\n  @ViewChild('loginFormDirective', { static: false }) loginFormDirective: FormGroupDirective;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private store: Store<State>,\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      login: new FormControl(\n          '',\n          {\n            updateOn: 'change',\n            validators: [\n              Validators.pattern('^[a-zA-Z0-9_\\\\-]{2,60}$'),\n              Validators.minLength(2),\n              Validators.maxLength(60),\n              Validators.required,\n            ],\n          }),\n      password: new FormControl(\n          '',\n          {\n            updateOn: 'change',\n            validators: [\n              Validators.pattern('^[a-zA-Z0-9_\\\\-]{8,60}$'),\n              Validators.minLength(8),\n              Validators.maxLength(60),\n              Validators.required,\n            ],\n          }),\n    });\n  }\n\n  switchInputType() {\n    if (this.inputType === 'password') {\n      this.inputType = 'text';\n    } else {\n      this.inputType = 'password';\n    }\n  }\n\n  onLogin() {\n    const user: User = {\n      login: this.loginForm.get('login').value,\n      password: this.loginForm.get('password').value,\n    };\n\n    this.store.dispatch(new Login({user}));\n    this.resetForm();\n    // this.userService.login(user)\n    //     .subscribe(\n    //         (_) => this.resetForm(),\n    //         (err) => console.log('login Error', err),\n    //     );\n  }\n\n  resetForm() {\n    if (this.loginFormDirective) {\n      this.loginFormDirective.resetForm();\n    }\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Signup</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"signupForm\\\" *ngIf=\\\"signupForm\\\" #signupFormDirective=\\\"ngForm\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n          <ion-card>\\n            <ion-card-header>\\n                        <div>\\n                          <img class=\\\"logo_login\\\" src=\\\"/assets/shapes.svg\\\">\\n\\n                        </div>\\n              <ion-card-title class=\\\"ion-text-center\\\">Signup</ion-card-title>\\n              <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                <a button color=\\\"primary\\\" routerLink=\\\"/user/login\\\">or Login</a>\\n              </ion-card-subtitle>\\n            </ion-card-header>\\n\\n            <ion-card-content>\\n              <ion-list>\\n                <ion-item>\\n                  <ion-icon class=\\\"ion-align-self-center\\\" name=\\\"podium-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label position=\\\"floating\\\">Company name</ion-label>\\n                  <ion-input type=\\\"text\\\" autocomplete autocorrect formControlName=\\\"companyName\\\"></ion-input>\\n                </ion-item>\\n                <ion-text\\n                  *ngIf=\\\"signupForm.get('companyName').touched && signupForm.get('companyName').errors && !signupForm.get('companyName').errors['unique']\\\"\\n                  class=\\\"input-error\\\" color=\\\"danger\\\">\\n                  {{signupForm.get('companyName').errors | json}}\\n                </ion-text>\\n                <ion-item>\\n                  <ion-icon class=\\\"ion-align-self-center\\\" name=\\\"person-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label position=\\\"floating\\\">Login</ion-label>\\n                  <ion-input type=\\\"text\\\" autocomplete autocorrect formControlName=\\\"login\\\"></ion-input>\\n                </ion-item>\\n                <ion-text *ngIf=\\\"signupForm.get('login').touched && signupForm.get('login').errors\\\" class=\\\"input-error\\\"\\n                  color=\\\"danger\\\">\\n                  {{signupForm.get('login').errors | json}}\\n                </ion-text>\\n                <ion-item>\\n                  <ion-icon class=\\\"ion-align-self-center\\\" name=\\\"mail-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label position=\\\"floating\\\">Email</ion-label>\\n                  <ion-input type=\\\"email\\\" autocomplete autocorrect formControlName=\\\"email\\\"></ion-input>\\n                </ion-item>\\n                <ion-text *ngIf=\\\"signupForm.get('email').touched && signupForm.get('email').errors\\\" class=\\\"input-error\\\"\\n                  color=\\\"danger\\\">\\n                  {{signupForm.get('email').errors | json}}\\n                </ion-text>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-icon class=\\\"ion-align-self-center\\\" name=\\\"lock-closed-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label position=\\\"floating\\\">Password</ion-label>\\n                  <ion-input [type]=\\\"inputType\\\" autocomplete autocorrect formControlName=\\\"password\\\"></ion-input>\\n                  <ion-icon class=\\\"ion-align-self-center\\\"\\n                    [name]=\\\"inputType === 'password' ? 'eye-outline' : 'eye-off-outline'\\\" slot=\\\"end\\\"\\n                    (click)=switchInputType()></ion-icon>\\n                </ion-item>\\n                <ion-text *ngIf=\\\"signupForm.get('password').touched && signupForm.get('password').errors\\\"\\n                  class=\\\"input-error\\\" color=\\\"danger\\\">\\n                  {{signupForm.get('password').errors | json}}\\n                </ion-text>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-icon class=\\\"ion-align-self-center\\\" name=\\\"reorder-two-outline\\\" slot=\\\"start\\\"></ion-icon>\\n\\n                  <ion-label position=\\\"floating\\\">Password Confirm</ion-label>\\n                  <ion-input [type]=\\\"inputType\\\" autocomplete autocorrect formControlName=\\\"passwordConfirm\\\"></ion-input>\\n                  <ion-icon\\n                    *ngIf=\\\"signupForm.get('passwordConfirm').status === 'VALID'\\\"\\n                    class=\\\"ion-align-self-center\\\" [name]=\\\"'checkmark-done-outline'\\\" color=\\\"primary\\\" slot=\\\"end\\\">\\n                  </ion-icon>\\n                </ion-item>\\n                <ion-text *ngIf=\\\"signupForm.get('passwordConfirm').touched && signupForm.get('passwordConfirm').errors\\\"\\n                  class=\\\"input-error\\\" color=\\\"danger\\\">\\n                  {{signupForm.get('passwordConfirm').errors | json}}\\n                </ion-text>\\n              </ion-list>\\n            </ion-card-content>\\n\\n          </ion-card>\\n\\n          <ion-row>\\n            <ion-col>\\n              <ion-button expand=\\\"block\\\" [disabled]=\\\"signupForm.status === 'INVALID' || signupForm.status === 'PENDING'\\\"\\n                (click)=\\\"formSubmitSubject$.next()\\\">\\n                Signup\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginFormPageRoutingModule } from './login-form-routing.module';\n\nimport { LoginFormPage } from './login-form.page';\nimport { SignupFormComponent } from './signup-form/signup-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LoginFormPageRoutingModule,\n  ],\n  declarations: [LoginFormPage, SignupFormComponent],\n})\nexport class LoginFormPageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, switchMap, take, tap } from 'rxjs/operators';\nimport { UserService } from '../../user.service';\n\n@Component({\n  selector: 'app-signup-form',\n  templateUrl: './signup-form.component.html',\n  styleUrls: ['./signup-form.component.scss'],\n})\nexport class SignupFormComponent implements OnInit {\n  signupForm: FormGroup;\n  inputType: 'password' | 'text' = 'password';\n  formSubmitSubject$ = new Subject();\n  @ViewChild('signupFormDirective', { static: false }) signupFormDirective: FormGroupDirective;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.signupForm = new FormGroup({\n      companyName: new FormControl(\n          '',\n          {\n            updateOn: 'blur',\n            validators: [\n              Validators.pattern('^[a-zA-Z0-9 _\\\\-]{2,60}$'),\n              Validators.minLength(2),\n              Validators.maxLength(60),\n              Validators.required,\n            ],\n            asyncValidators: [\n              this.userService.checkCompanyNameUnique(),\n            ],\n          }),\n      login: new FormControl(\n          '',\n          {\n            updateOn: 'blur',\n            validators: [\n              Validators.pattern('^[a-zA-Z0-9_\\\\-]{2,60}$'),\n              Validators.minLength(2),\n              Validators.maxLength(60),\n              Validators.required,\n            ],\n            asyncValidators: [\n              this.userService.checkLoginUnique(),\n            ],\n          }),\n      password: new FormControl(\n          '',\n          {\n            updateOn: 'change',\n            validators: [\n              Validators.pattern('^[a-zA-Z0-9_\\\\-]{8,60}$'),\n              Validators.minLength(8),\n              Validators.maxLength(60),\n              Validators.required,\n            ],\n          }),\n      passwordConfirm: new FormControl(\n          '',\n          {\n            updateOn: 'change',\n            validators: [\n              Validators.pattern('^[a-zA-Z0-9_\\\\-]{8,60}$'),\n              Validators.minLength(8),\n              Validators.maxLength(60),\n              Validators.required,\n            ],\n          }),\n      email: new FormControl(\n          '',\n          {\n            updateOn: 'blur',\n            validators: [\n              Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n              Validators.required,\n            ],\n            asyncValidators: [\n              this.userService.checkEmailUnique(),\n            ],\n          }),\n\n    }, this.userService.matchPassword,\n    );\n\n    // prevent form submit before async validator completes\n    this.formSubmitSubject$\n        .pipe(\n            tap(() => this.signupForm.markAsDirty()),\n            switchMap(() =>\n              this.signupForm.statusChanges.pipe(\n                  startWith(this.signupForm.status),\n                  filter((status) => status !== 'PENDING'),\n                  take(1),\n              ),\n            ),\n            filter((status) => status === 'VALID'),\n        )\n        .subscribe((validationSuccessful) => this.onSignup());\n  }\n\n  switchInputType() {\n    if (this.inputType === 'password') {\n      this.inputType = 'text';\n    } else {\n      this.inputType = 'password';\n    }\n  }\n\n  onSignup() {\n    this.userService.createCompany(\n        {\n          companyName: this.signupForm.get('companyName').value,\n          user: {\n            login: this.signupForm.get('login').value,\n            password: this.signupForm.get('password').value,\n            email: this.signupForm.get('email').value,\n          },\n        },\n\n    ).subscribe(\n        (_) => this.resetForm(),\n        (err) => console.log('signup Error', err.error),\n    );\n  }\n\n  resetForm() {\n    if (this.signupFormDirective) {\n      this.signupFormDirective.resetForm();\n    }\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\nimport { State } from '../../store/reducers';\n\nimport { UserService } from './user.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoAuthGuard implements CanActivate {\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private store: Store<State>,\n\n  ) { }\n\n  canActivate( route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n  Observable<boolean | UrlTree>| Promise<boolean | UrlTree>| boolean | UrlTree {\n    return this.store.select('user').pipe(\n        map((storeState) => {\n          if (storeState.user) {\n            this.router.navigateByUrl('/');\n            return false;\n          }\n          return true;\n        }),\n        // take(1),\n    );\n  }\n}\n","export default \".logo_login {\\n  width: 100%;\\n  margin: auto;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcbG9naW4tZm9ybS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFBSiIsImZpbGUiOiJsb2dpbi1mb3JtLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dvIHtcclxuICAmX2xvZ2luIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG59Il19 */\";","export default \".logo_login {\\n  width: 100%;\\n  margin: auto;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHNpZ251cC1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FBQUoiLCJmaWxlIjoic2lnbnVwLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9nbyB7XHJcbiAgJl9sb2dpbiB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxufSJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"loginForm\\\" #loginFormDirective=\\\"ngForm\\\">\\n    <ion-grid>\\n      <ion-row>\\n\\n        <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <div>\\n              <img class=\\\"logo_login\\\" src=\\\"/assets/shapes.svg\\\">\\n\\n              </div>\\n              <ion-card-title class=\\\"ion-text-center\\\">Login</ion-card-title>\\n              <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                <a button color=\\\"primary\\\" routerLink=\\\"/user/login/signup\\\">or Signup</a>\\n              </ion-card-subtitle>\\n            </ion-card-header>\\n\\n            <ion-card-content>\\n              <ion-list>\\n                <ion-item>\\n                  <ion-icon class=\\\"ion-align-self-center\\\" name=\\\"person-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label position=\\\"floating\\\">Login</ion-label>\\n                  <ion-input type=\\\"text\\\" autocomplete autocorrect formControlName=\\\"login\\\"></ion-input>\\n                </ion-item>\\n                <ion-text *ngIf=\\\"loginForm.get('login').touched && loginForm.get('login').errors\\\" class=\\\"input-error\\\"\\n                  color=\\\"danger\\\">\\n                  {{loginForm.get('login').errors | json}}\\n                </ion-text>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-icon class=\\\"ion-align-self-center\\\" name=\\\"lock-closed-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label position=\\\"floating\\\">Password</ion-label>\\n                  <ion-input [type]=\\\"inputType\\\" autocomplete autocorrect formControlName=\\\"password\\\"></ion-input>\\n                  <ion-icon class=\\\"ion-align-self-center\\\"\\n                    [name]=\\\"inputType === 'password' ? 'eye-outline' : 'eye-off-outline'\\\" slot=\\\"end\\\"\\n                    (click)=switchInputType()></ion-icon>\\n                </ion-item>\\n                <ion-text *ngIf=\\\"loginForm.get('password').touched && loginForm.get('password').errors\\\"\\n                  class=\\\"input-error\\\" color=\\\"danger\\\">\\n                  {{loginForm.get('password').errors | json}}\\n                </ion-text>\\n\\n              </ion-list>\\n            </ion-card-content>\\n\\n          </ion-card>\\n          <ion-row>\\n            <ion-col>\\n              <ion-button expand=\\\"block\\\" [disabled]=\\\"loginForm.status === 'INVALID'\\\" (click)=\\\"onLogin()\\\">\\n                Login\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginFormPage } from './login-form.page';\nimport { SignupFormComponent } from './signup-form/signup-form.component';\nimport { NoAuthGuard } from '../no-auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginFormPage,\n    canActivate: [NoAuthGuard],\n  },\n  {\n    path: 'signup',\n    component: SignupFormComponent,\n    canActivate: [NoAuthGuard],\n  },\n  {\n    path: '**',\n    redirectTo: '',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginFormPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}