{"version":3,"sources":["./src/app/modules/dashboard/dashboard.page.ts","./src/app/modules/dashboard/dashboard.page.scss","./src/app/modules/dashboard/dashboard.module.ts","./src/app/modules/dashboard/dashboard.page.html","./src/app/modules/user/auth-admin.guard.ts","./src/app/modules/dashboard/dashboard-routing.module.ts"],"names":[],"mappings":"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","file":"modules-dashboard-dashboard-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { User } from 'src/app/interface';\nimport { Logout } from 'src/app/store/actions/user.actions';\nimport { State } from 'src/app/store/reducers';\nimport { getUser } from 'src/app/store/reducers/user.reducer';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.page.html',\n  styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n  user: User;\n\n  constructor(\n    private store: Store<State>,\n  ) { }\n\n  ngOnInit() {\n    this.store.select(getUser)\n        .subscribe((user) => {\n          this.user = user;\n        });\n  }\n\n  onLogout() {\n    this.store.dispatch(new Logout());\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\n\nimport { DashboardPage } from './dashboard.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashboardPageRoutingModule,\n  ],\n  declarations: [DashboardPage],\n})\nexport class DashboardPageModule {}\n","export default \"<ion-menu side=\\\"end\\\" contentId=\\\"dashboard-content\\\">\\n  <ion-header>\\n    <ion-toolbar color=\\\"secondary\\\">\\n      <ion-title>\\n        <h2>{{user?.login}}</h2>\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  <ion-content>\\n    <ion-list lines=\\\"none\\\">\\n      <ion-menu-toggle contentId=\\\"dashboard-content\\\">\\n        <ion-item button routerLink=\\\"/dashboard/profile\\\" routerLinkActive=\\\"active-link\\\"\\n          [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n          <ion-icon name=\\\"person-circle-outline\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label>Profile</ion-label>\\n        </ion-item>\\n      </ion-menu-toggle>\\n      <ion-menu-toggle *ngIf=\\\"user?.role === 'admin'\\\" contentId=\\\"dashboard-content\\\">\\n        <ion-item button routerLink=\\\"/dashboard/operator\\\" routerLinkActive=\\\"active-link\\\"\\n          [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n          <ion-icon name=\\\"people-outline\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label>Operator</ion-label>\\n        </ion-item>\\n      </ion-menu-toggle>\\n      <ion-menu-toggle *ngIf=\\\"!user?.blocked\\\" contentId=\\\"dashboard-content\\\">\\n        <ion-item button routerLink=\\\"/dashboard/room\\\" routerLinkActive=\\\"active-link\\\"\\n          [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n          <ion-icon name=\\\"business-outline\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label>Room</ion-label>\\n        </ion-item>\\n      </ion-menu-toggle>\\n      <!-- <ion-menu-toggle contentId=\\\"main-content\\\">\\n          <ion-item button routerLink=\\\"/dashboard/management\\\" routerLinkActive=\\\"active-link\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n            <ion-icon name=\\\"file-tray-full-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label>Management</ion-label>\\n          </ion-item>\\n        </ion-menu-toggle> -->\\n      <ion-menu-toggle contentId=\\\"dashboard-content\\\">\\n        <ion-item button (click)=\\\"onLogout()\\\">\\n          <ion-icon name=\\\"exit\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label>Logout</ion-label>\\n        </ion-item>\\n      </ion-menu-toggle>\\n    </ion-list>\\n  </ion-content>\\n</ion-menu>\\n<ion-router-outlet id=\\\"dashboard-content\\\"></ion-router-outlet>\";","import { Injectable } from '@angular/core';\nimport { CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\nimport { State } from '../../store/reducers';\n\nimport { UserService } from './user.service';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthAdminGuard implements CanLoad, CanActivate {\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private store: Store<State>,\n\n  ) { }\n\n  // Prevents fetching lazy loading modules\n  canLoad(route: Route, segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n    return this.store.select('user').pipe(\n        map((storeState) => {\n          if (!storeState.user || storeState.user.role !== 'admin') {\n            this.router.navigateByUrl('/user/login');\n            return false;\n          }\n          return true;\n        }),\n        take(1),\n    );\n  }\n\n  // If lazy loadnig module already fetched and user logged out\n  // this guard prevents to activate module\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.store.select('user').pipe(\n        map((storeState) => {\n          if (!storeState.user || storeState.user.role !== 'admin') {\n            this.router.navigateByUrl('/user/login');\n            return false;\n          }\n          return true;\n        }),\n        // take(1),\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthAdminGuard } from '../user/auth-admin.guard';\nimport { AuthBlockedGuard } from '../user/auth-blocked.guard';\n\nimport { AuthGuard } from '../user/auth.guard';\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage,\n    children: [\n      {\n        path: '',\n        redirectTo: 'operator',\n        pathMatch: 'full',\n      },\n      {\n        path: 'operator',\n        loadChildren: () => import('./operator/operator.module').then((m) => m.OperatorPageModule),\n        canLoad: [AuthAdminGuard],\n        canActivate: [AuthAdminGuard],\n      },\n      {\n        path: 'room',\n        loadChildren: () => import('./room/room.module').then((m) => m.RoomPageModule),\n        canLoad: [AuthGuard, AuthBlockedGuard],\n        canActivate: [AuthGuard, AuthBlockedGuard],\n      },\n      {\n        path: 'profile',\n        loadChildren: () => import('./profile/profile.module').then((m) => m.ProfilePageModule),\n        canLoad: [AuthGuard],\n        canActivate: [AuthGuard],\n      },\n    ],\n  },\n  {\n    path: '**',\n    redirectTo: '',\n    pathMatch: 'full',\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule { }\n"],"sourceRoot":"webpack:///"}