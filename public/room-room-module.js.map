{"version":3,"sources":["./src/app/modules/dashboard/room/room-add/room-add.component.scss","./src/app/modules/dashboard/room/room-add/room-add.component.html","./src/app/modules/dashboard/room/room.service.ts","./src/app/modules/dashboard/room/room.module.ts","./src/app/modules/dashboard/room/room.page.html","./src/app/modules/dashboard/room/room-add/room-add.component.ts","./src/app/modules/dashboard/room/room.page.scss","./src/app/modules/dashboard/room/room-routing.module.ts","./src/app/modules/dashboard/room/room.page.ts"],"names":[],"mappings":"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","file":"room-room-module.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyb29tLWFkZC5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Add room</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"dismiss()\\\">close</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"addRoomForm\\\" *ngIf=\\\"addRoomForm\\\" #addRoomFormDirective=\\\"ngForm\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-title class=\\\"ion-text-center\\\">Add room</ion-card-title>\\n              <ion-progress-bar *ngIf=\\\"loading$ | async\\\" type=\\\"indeterminate\\\" color=\\\"primary\\\"></ion-progress-bar>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-list>\\n                <ion-item>\\n                  <ion-icon class=\\\"ion-align-self-center\\\" name=\\\"business-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label position=\\\"floating\\\">Name</ion-label>\\n                  <ion-input type=\\\"text\\\" autocomplete autocorrect formControlName=\\\"name\\\"></ion-input>\\n                </ion-item>\\n                <ion-text *ngIf=\\\"addRoomForm.get('name').touched && addRoomForm.get('name').errors\\\" class=\\\"input-error\\\"\\n                  color=\\\"danger\\\">\\n                  {{addRoomForm.get('name').errors | json}}\\n                </ion-text>\\n                <ion-item>\\n                  <ion-icon class=\\\"ion-align-self-center\\\" name=\\\"cash-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label position=\\\"floating\\\">Price</ion-label>\\n                  <ion-input autocomplete autocorrect formControlName=\\\"price\\\"></ion-input>\\n                </ion-item>\\n                <ion-text *ngIf=\\\"addRoomForm.get('price').touched && addRoomForm.get('price').errors\\\"\\n                  class=\\\"input-error\\\" color=\\\"danger\\\">\\n                  {{addRoomForm.get('price').errors | json}}\\n                </ion-text>\\n              </ion-list>\\n            </ion-card-content>\\n\\n          </ion-card>\\n\\n          <ion-row>\\n            <ion-col>\\n              <ion-button expand=\\\"block\\\"\\n                [disabled]=\\\"addRoomForm.status === 'INVALID' || addRoomForm.status === 'PENDING'\\\"\\n                (click)=\\\"this.onSignup()\\\">\\n                Signup\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\";","import { Injectable } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { EntityCollectionServiceBase, EntityCollectionServiceElementsFactory } from '@ngrx/data';\nimport { FormFieldOptions, Room, RoomFormFields } from '../../../interface';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class RoomService extends EntityCollectionServiceBase<Room> {\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\n    super('Room', serviceElementsFactory);\n  }\n\n  formFieldOptions(field: RoomFormFields) {\n    return this.formFieldsOptions.get(field);\n  }\n\n  private get formFieldsOptions() {\n    return new Map<RoomFormFields, FormFieldOptions>([\n      ['price', {\n        title: 'Update price',\n        subTitle: 'Price',\n        iconName: 'business-outline',\n        inputLable: 'input price',\n        inputType: 'text',\n        errors: new Map<string, string>([\n          ['required', 'Required value'],\n          ['pattern', 'Entered wrong symbol'],\n        ]),\n        formControl: {\n          formState: '',\n          validatorOrOpts: {\n            updateOn: 'change',\n            validators: [\n              Validators.pattern('[0-9]*'),\n              Validators.required,\n            ],\n          },\n        },\n      }],\n      ['name', {\n        title: 'Update room',\n        subTitle: 'Name',\n        iconName: 'cash-outline',\n        inputLable: 'input room name',\n        inputType: 'text',\n        errors: new Map<string, string>([\n          ['required', 'Required value'],\n          ['pattern', 'Entered wrong symbol'],\n          ['minlength', 'Too short'],\n          ['maxlength', 'Too long'],\n        ]),\n        formControl: {\n          formState: '',\n          validatorOrOpts: {\n            updateOn: 'change',\n            validators: [\n              Validators.pattern('^[a-zA-Z0-9а-яА-ЯіІїЇєЄ_@#$%№ \\'\"\\\\-]*$'),\n              Validators.minLength(2),\n              Validators.maxLength(60),\n              Validators.required,\n            ],\n          },\n        },\n      }],\n    ]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RoomPageRoutingModule } from './room-routing.module';\n\nimport { RoomPage } from './room.page';\nimport { RoomAddComponent } from './room-add/room-add.component';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RoomPageRoutingModule,\n    SharedModule,\n  ],\n  declarations: [ RoomPage, RoomAddComponent ],\n})\nexport class RoomPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Room\\n      <ng-container *ngIf=\\\"loading$ | async as loadiong\\\"> Loading..</ng-container>\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n        <ion-menu-button contentId=\\\"dashboard-content\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n        <h2 class=\\\"ion-text-center\\\">{{company?.companyName}}</h2>\\n        <ion-list>\\n          <ion-list-header>\\n            <ion-label>\\n              <h2>Rooms</h2>\\n                            <ion-note slot=\\\"end\\\">\\n                              slide to delete\\n                            </ion-note>\\n            </ion-label>\\n            <ion-button (click)=\\\"add()\\\">New room</ion-button>\\n          </ion-list-header>\\n          <ng-container *ngFor=\\\"let room of rooms\\\">\\n            <ion-item-sliding>\\n              <ion-item>\\n                <ion-label>\\n                  <ion-row>\\n                    <ion-col class=\\\"ion-no-padding\\\" size=\\\"4\\\">\\n                      <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\n                        <ion-label>\\n                          <h4>Room name:</h4>\\n                        </ion-label>\\n                      </ion-item>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-no-padding\\\" size=\\\"8\\\">\\n                      <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\n                        <ion-label>\\n                          <ion-text color=\\\"primary\\\">\\n\\n                              {{room.name}}\\n\\n                          </ion-text>\\n                        </ion-label>\\n                        <ion-button (click)=\\\"update(room._id, 'name')\\\">\\n                          Update\\n                        </ion-button>\\n                      </ion-item>\\n                    </ion-col>\\n                  </ion-row>\\n\\n                  <ion-row>\\n                    <ion-col class=\\\"ion-no-padding\\\" size=\\\"4\\\">\\n                      <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\n                        <ion-label>\\n                          <h4>Price:</h4>\\n                        </ion-label>\\n                      </ion-item>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-no-padding\\\" size=\\\"8\\\">\\n                      <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\n                        <ion-label>\\n                          <ion-text color=\\\"primary\\\">\\n\\n                              {{room.price}}\\n\\n                          </ion-text>\\n                        </ion-label>\\n                        <ion-button (click)=\\\"update(room._id, 'price')\\\">\\n                          Update\\n                        </ion-button>\\n                      </ion-item>\\n                    </ion-col>\\n                  </ion-row>\\n\\n                </ion-label>\\n                <!-- <ion-note slot=\\\"end\\\">\\n                  slide to delete\\n                </ion-note> -->\\n              </ion-item>\\n              <ion-item-options side=\\\"end\\\">\\n                <ion-item-option color=\\\"danger\\\" (click)=\\\"presentAlert(room._id, room.name)\\\">\\n                  <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n                </ion-item-option>\\n              </ion-item-options>\\n\\n            </ion-item-sliding>\\n          </ng-container>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, startWith, switchMap, take, tap } from 'rxjs/operators';\n\nimport { Company } from 'src/app/interface';\nimport { UserService } from 'src/app/modules/user/user.service';\nimport { State } from '../../../../store/reducers';\nimport { RoomService } from '../room.service';\n\n@Component({\n  selector: 'app-room-add',\n  templateUrl: './room-add.component.html',\n  styleUrls: ['./room-add.component.scss'],\n})\nexport class RoomAddComponent implements OnInit {\n  @Input() company: Company;\n  addRoomForm: FormGroup;\n  @ViewChild('addRoomFormDirective', { static: false }) addRoomFormDirective: FormGroupDirective;\n  loading$: Observable<boolean> | Store<boolean>\n  loadingIndicator: any;\n\n  constructor(\n    public modalController: ModalController,\n    private userService: UserService,\n    private store: Store<State>,\n    private roomService: RoomService,\n  ) { }\n\n  ngOnInit() {\n    this.loading$ = this.roomService.loading$;\n\n    this.addRoomForm = new FormGroup({\n      name: new FormControl(\n          this.roomService.formFieldOptions('name').formControl.formState,\n          this.roomService.formFieldOptions('name').formControl.validatorOrOpts,\n          this.roomService.formFieldOptions('name').formControl.asyncValidator),\n      price: new FormControl(\n          this.roomService.formFieldOptions('price').formControl.formState,\n          this.roomService.formFieldOptions('price').formControl.validatorOrOpts,\n          this.roomService.formFieldOptions('price').formControl.asyncValidator),\n    });\n  }\n\n  dismiss(data?: any): void {\n    this.modalController.dismiss(data);\n  }\n\n  onSignup() {\n    this.dismiss({\n      name: this.addRoomForm.get('name').value,\n      price: this.addRoomForm.get('price').value,\n    });\n    this.resetForm();\n  }\n\n  resetForm() {\n    if (this.addRoomFormDirective) {\n      this.addRoomFormDirective.resetForm();\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyb29tLnBhZ2Uuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RoomPage } from './room.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RoomPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RoomPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Company, Room, RoomFormFields, User } from 'src/app/interface';\nimport { State } from 'src/app/store/reducers';\nimport { RoomService } from './room.service';\nimport { getCompany, getUser } from '../../../store/reducers/user.reducer';\nimport { AlertController, ModalController } from '@ionic/angular';\nimport { RoomAddComponent } from './room-add/room-add.component';\nimport { Observable } from 'rxjs';\nimport { UpdateFormFieldComponent } from '../../shared/update-form-field/update-form-field.component';\n\n@Component({\n  selector: 'app-room',\n  templateUrl: './room.page.html',\n  styleUrls: ['./room.page.scss'],\n})\nexport class RoomPage implements OnInit {\n  user: User | null = null;\n  company: Company | null = null;\n  rooms: Room[];\n  loading$: Observable<boolean> | Store<boolean>\n\n  constructor(\n    private roomService: RoomService,\n    private store: Store<State>,\n    public modalController: ModalController,\n    public alertController: AlertController,\n  ) { }\n\n  ngOnInit() {\n    this.store.select(getCompany)\n        .subscribe((company) => {\n          if (company) {\n            this.company = company;\n            this.roomService.getAll();\n          }\n        });\n\n    this.store.select(getUser)\n        .subscribe((user) => {\n          if (user) {\n            this.user = user;\n          }\n        });\n\n    this.loading$ = this.roomService.loading$;\n    this.roomService.entities$\n        .subscribe((rooms) => this.rooms = rooms);\n  }\n\n  async presentAlert(_id: string, name: string) {\n    const alert = await this.alertController.create({\n      // cssClass: 'my-custom-class',\n      header: 'Delete',\n      subHeader: 'room: ' + name,\n      message: 'Are you shure?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        // cssClass: 'secondary',\n        handler: (blah) => {\n          console.log('Confirm Cancel: blah');\n        },\n      }, {\n        text: 'Okay',\n        handler: () => this.remove(_id),\n      }],\n    });\n    await alert.present();\n  }\n\n  async presentModal(component, data?: any): Promise<any> {\n    const modal = await this.modalController.create({\n      component,\n      // cssClass: 'my-custom-class',\n      componentProps: data,\n    });\n    await modal.present();\n    return await modal.onWillDismiss();\n  }\n\n  async update(_id: string, field: RoomFormFields) {\n    const { data } = await this.presentModal(UpdateFormFieldComponent, { data: this.roomService.formFieldOptions(field)});\n    if (data) {\n      this.roomService.update({\n        _id,\n        [field]: data,\n      }).subscribe(\n          (result) => console.log('update result', result),\n          (err) => console.log('update error', err),\n      );\n    }\n  }\n\n  async add() {\n    const { data } = await this.presentModal(RoomAddComponent, { company: this.company });\n    if (data) {\n      this.roomService.add(data).subscribe(\n          (result) => console.log('add result', result),\n          (err) => console.log('add error', err),\n      );\n    }\n  }\n\n  remove(_id: string) {\n    return this.roomService.delete(_id);\n  }\n}\n"],"sourceRoot":"webpack:///"}