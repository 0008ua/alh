{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./src/app/modules/user/auth-blocked.guard.ts","./src/app/modules/shared/shared.module.ts","./src/app/modules/shared/update-form-field/update-form-field.component.scss","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./src/app/modules/shared/update-form-field/update-form-field.component.html","./src/app/modules/shared/update-form-field/update-form-field.module.ts","./node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","./node_modules/@ionic/core/dist/esm/theme-5641d27f.js","./src/app/modules/shared/update-form-field/update-form-field.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AAC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","file":"common.js","sourcesContent":["const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","import { Injectable } from '@angular/core';\nimport { CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\nimport { State } from '../../store/reducers';\n\nimport { UserService } from './user.service';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthBlockedGuard implements CanLoad, CanActivate {\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private store: Store<State>,\n\n  ) { }\n\n  // Prevents fetching lazy loading modules\n  canLoad(route: Route, segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n    return this.store.select('user').pipe(\n        map((storeState) => {\n          if (!storeState.user || storeState.user.blocked) {\n            this.router.navigateByUrl('/user/login');\n            return false;\n          }\n          return true;\n        }),\n        take(1),\n    );\n  }\n\n  // If lazy loadnig module already fetched and user logged out\n  // this guard prevents to activate module\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.store.select('user').pipe(\n        map((storeState) => {\n          if (!storeState.user || storeState.user.blocked) {\n            this.router.navigateByUrl('/user/login');\n            return false;\n          }\n          return true;\n        }),\n        // take(1),\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { UpdateFormFieldModule } from './update-form-field/update-form-field.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    IonicModule,\n    UpdateFormFieldModule,\n  ],\n  entryComponents: [],\n})\nexport class SharedModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUtZm9ybS1maWVsZC5jb21wb25lbnQuc2NzcyJ9 */\";","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{data.title}}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"dismiss()\\\">close</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"updateFormField\\\" *ngIf=\\\"updateFormField\\\" #updateFormFieldDirective=\\\"ngForm\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-title class=\\\"ion-text-center\\\">{{data.subTitle}}</ion-card-title>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-list>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-icon class=\\\"ion-align-self-center\\\" [name]=\\\"data.iconName\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label position=\\\"floating\\\">{{data.inputLable}}</ion-label>\\n                  <ion-input [type]=\\\"data.inputType || 'text'\\\" autocomplete autocorrect formControlName=\\\"formControlName\\\"></ion-input>\\n                </ion-item>\\n                <ng-container *ngIf=\\\"updateFormField.get('formControlName').touched && updateFormField.get('formControlName').errors\\\">\\n                  <ion-text *ngFor=\\\"let error of errorMapping(updateFormField.get('formControlName').errors)\\\" class=\\\"input-error\\\" color=\\\"danger\\\">\\n                    {{error}}\\n                  </ion-text>\\n                </ng-container>\\n              </ion-list>\\n            </ion-card-content>\\n          </ion-card>\\n          <ion-row>\\n            <ion-col size=\\\"8\\\">\\n              <ion-button expand=\\\"block\\\"\\n                [disabled]=\\\"updateFormField.status === 'INVALID' || updateFormField.status === 'PENDING'\\\"\\n                (click)=\\\"formSubmitSubject$.next()\\\">\\n                Ok\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"4\\\">\\n              <ion-button expand=\\\"block\\\" (click)=\\\"dismiss()\\\">\\n                Cancel\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UpdateFormFieldComponent } from './update-form-field.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\n\n@NgModule({\n  declarations: [UpdateFormFieldComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n  ],\n})\nexport class UpdateFormFieldModule { }\n","import { c as writeTask } from './index-92848855.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { AfterViewChecked, AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\n\nimport { Observable, Subject } from 'rxjs';\nimport { filter, startWith, switchMap, take, tap } from 'rxjs/operators';\nimport { FormFieldOptions } from 'src/app/interface';\nimport { UserService } from 'src/app/modules/user/user.service';\n\n@Component({\n  selector: 'app-update-form-field',\n  templateUrl: './update-form-field.component.html',\n  styleUrls: ['./update-form-field.component.scss'],\n})\nexport class UpdateFormFieldComponent implements OnInit {\n  updateFormField: FormGroup;\n  formSubmitSubject$ = new Subject();\n  @ViewChild('updateFormFieldDirective', { static: false }) updateFormFieldDirective: FormGroupDirective;\n  @Input() data: FormFieldOptions;\n\n  constructor(\n    public modalController: ModalController,\n  ) { }\n\n  ngOnInit() {\n    this.updateFormField = new FormGroup({\n      formControlName: new FormControl(\n          this.data.formControl.formState,\n          this.data.formControl.validatorOrOpts,\n          this.data.formControl.asyncValidator),\n    });\n\n    this.formSubmitSubject$\n        .pipe(\n            tap(() => this.updateFormField.markAsDirty()),\n            switchMap(() =>\n              this.updateFormField.statusChanges.pipe(\n                  startWith(this.updateFormField.status),\n                  filter((status) => status !== 'PENDING'),\n                  take(1),\n              ),\n            ),\n            filter((status) => status === 'VALID'),\n        )\n        .subscribe((validationSuccessful) => this.onConfirm());\n  }\n\n  errorMapping(errors) {\n    const errorsArr = [];\n    for (const key in errors) {\n      if (this.data.errors.has(key)) {\n        console.log('key', key);\n\n        console.log('key', this.data.errors.get(key));\n        errorsArr.push(this.data.errors.get(key));\n      }\n    }\n    console.log('errorsArr', errorsArr);\n    return errorsArr.length ? errorsArr : ['Error: Wrong symbols or length'];\n  }\n\n  dismiss(data?: any): void {\n    this.modalController.dismiss(data);\n  }\n\n  onConfirm() {\n    this.dismiss(this.updateFormField.get('formControlName').value);\n    this.resetForm();\n  }\n\n  resetForm() {\n    if (this.updateFormFieldDirective) {\n      this.updateFormFieldDirective.resetForm();\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}