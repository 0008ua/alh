{"version":3,"sources":["./src/app/modules/analytics/summary/summary.page.scss","./src/app/modules/analytics/summary/summary-routing.module.ts","./src/app/modules/analytics/summary/summary.page.html","./src/app/modules/analytics/summary/summary.page.ts","./src/app/modules/analytics/summary/summary.module.ts"],"names":[],"mappings":"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","file":"summary-summary-module.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdW1tYXJ5LnBhZ2Uuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SummaryPage } from './summary.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SummaryPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SummaryPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Summary</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-menu-button contentId=\\\"analytics-content\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label>Choose period</ion-label>\\n            <ion-datetime pickerFormat=\\\"MMMM-YYYY\\\" displayFormat=\\\"MMMM YYYY\\\" [max]=\\\"maxDate\\\" placeholder=\\\"Select Month\\\"\\n              [(ngModel)]=\\\"date\\\" (ionChange)=\\\"filter()\\\"></ion-datetime>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n        <ion-item-group>\\n          <ion-item-divider>\\n            <ion-toggle slot=\\\"start\\\" color=\\\"primary\\\" #totalSold checked></ion-toggle>\\n            <ion-label><h2>Total sold</h2></ion-label>\\n            <ion-text slot=\\\"end\\\" color=\\\"primary\\\">{{calculatedData.rooms[0]?.analytics?.totalSold}}</ion-text>\\n          </ion-item-divider>\\n          <ng-container *ngIf=\\\"totalSold.checked\\\">\\n            <ion-item *ngFor=\\\"let room of calculatedData.rooms | slice:1\\\" lines=\\\"none\\\">\\n              <ion-label><p>{{room.name}}</p></ion-label>\\n              <ion-text slot=\\\"end\\\" color=\\\"primary\\\">{{room.analytics.totalSold}}</ion-text>\\n            </ion-item>\\n          </ng-container>\\n        </ion-item-group>\\n\\n        <ion-item-group>\\n          <ion-item-divider>\\n            <ion-toggle slot=\\\"start\\\" color=\\\"primary\\\" #totalPaid></ion-toggle>\\n            <ion-label lines=\\\"none\\\"><h2>Total paid</h2></ion-label>\\n            <ion-text slot=\\\"end\\\" color=\\\"primary\\\">{{calculatedData.rooms[0]?.analytics?.totalPayments}}</ion-text>\\n          </ion-item-divider>\\n          <ng-container *ngIf=\\\"totalPaid.checked\\\">\\n            <ion-item *ngFor=\\\"let room of calculatedData.rooms | slice:1\\\" lines=\\\"none\\\">\\n              <ion-label><p>{{room.name}}</p></ion-label>\\n              <ion-text slot=\\\"end\\\" color=\\\"primary\\\">{{room.analytics.totalPayments}}</ion-text>\\n            </ion-item>\\n          </ng-container>\\n        </ion-item-group>\\n\\n        <!-- <ion-item-group>\\n          <ion-item-divider>\\n            <ion-toggle slot=\\\"start\\\" color=\\\"primary\\\" #expectedPayments></ion-toggle>\\n            <ion-label lines=\\\"none\\\">Expected payments</ion-label>\\n            <ion-text slot=\\\"end\\\" color=\\\"primary\\\">Value</ion-text>\\n          </ion-item-divider>\\n          <ng-container *ngIf=\\\"expectedPayments.checked\\\">\\n            <ion-item *ngFor=\\\"let room of calculatedData.rooms | slice:1\\\" lines=\\\"none\\\">\\n              <ion-label>{{room.name}}</ion-label>\\n              <ion-text slot=\\\"end\\\" color=\\\"primary\\\">{{room.analytics.totalSold}}</ion-text>\\n            </ion-item>\\n          </ng-container>\\n        </ion-item-group> -->\\n\\n        <ion-item-group>\\n          <ion-item-divider>\\n            <ion-toggle slot=\\\"start\\\" color=\\\"primary\\\" #occupancy></ion-toggle>\\n            <ion-label lines=\\\"none\\\"><h2>Occupancy</h2>\\n              <ion-progress-bar color=\\\"primary\\\"\\n                [value]=\\\"calculatedData.rooms[0]?.analytics?.totalRoomDays / calculatedData.rooms[0]?.analytics?.daysInMonth\\\">\\n              </ion-progress-bar>\\n            </ion-label>\\n            <ion-text slot=\\\"end\\\" color=\\\"primary\\\">\\n              {{calculatedData.rooms[0]?.analytics?.totalRoomDays / calculatedData.rooms[0]?.analytics?.daysInMonth |\\n              percent: '2.0-0'}}\\n            </ion-text>\\n\\n\\n          </ion-item-divider>\\n          <ng-container *ngIf=\\\"occupancy.checked\\\">\\n            <ion-item *ngFor=\\\"let room of calculatedData.rooms | slice:1\\\" lines=\\\"none\\\">\\n              <ion-label><p>{{room.name}}</p>\\n                <ion-progress-bar color=\\\"primary\\\" [value]=\\\"room.analytics.totalRoomDays / room.analytics.daysInMonth\\\">\\n                </ion-progress-bar>\\n              </ion-label>\\n\\n              <ion-text slot=\\\"end\\\" color=\\\"primary\\\">{{room.analytics.totalRoomDays / room.analytics.daysInMonth |\\n                percent: '2.0-0'}}\\n              </ion-text>\\n            </ion-item>\\n          </ng-container>\\n        </ion-item-group>\\n\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { SheduleService } from '../../shedule/shedule.service';\nimport * as fns from 'date-fns';\nimport { Store } from '@ngrx/store';\nimport { State } from 'src/app/store/reducers';\nimport { getBookings, getPayments } from 'src/app/store/reducers/shedule.reducer';\nimport { Booking, BookingQuery, DateRangeLimits, Payment, PaymentQuery, Room } from 'src/app/interface';\nimport { GetBookings, GetPayments } from 'src/app/store/actions/shedule.actions';\nimport { getCompany } from 'src/app/store/reducers/user.reducer';\nimport { combineLatest, of } from 'rxjs';\nimport { mergeMap, skip } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.page.html',\n  styleUrls: ['./summary.page.scss'],\n})\nexport class SummaryPage implements OnInit, OnChanges {\n  date: string = this.sheduleService.convertDateToShort(new Date());\n  maxDate: string = this.sheduleService.convertDateToShort(fns.add(new Date(), { years: 1 }));\n  dateRangeLimits: DateRangeLimits = this.sheduleService.createDateRangeLimits(this.sheduleService.convertISOToDate(this.date));\n\n  bookings: Booking[];\n  payments: Payment[];\n  room: Partial<Room>;\n  rooms: Partial<Room>[];\n  calculatedData: {\n    rooms?: any;\n  } = {rooms: []};\n\n  constructor(\n    private sheduleService: SheduleService,\n    private store: Store<State>,\n    private route: ActivatedRoute,\n  ) { }\n  ngOnChanges() {\n    console.log('asdasd');\n  }\n  ngOnInit() {\n    const getCompany$ = this.store.select(getCompany);\n    const getBookings$ = this.store.select(getBookings);\n    const getPayments$ = this.store.select(getPayments);\n\n\n    getCompany$.pipe(\n        mergeMap((company) => {\n          console.log('company summary', company);\n\n          if (company) {\n            console.log('combineLatest');\n\n            this.rooms = [...company.rooms];\n            this.rooms.unshift({ _id: null, name: 'All' });\n            this.room = this.rooms[0];\n            return combineLatest([getBookings$, getPayments$]);\n          }\n          return of([null, null]);\n        }),\n        skip(1),\n    )\n        .subscribe(\n            ([bookings, payments]) => {\n              if (bookings && payments) {\n                console.log('bookings summary', bookings);\n                console.log('payments summary', payments);\n                this.bookings = bookings;\n                this.payments = payments;\n                this.calcData();\n              }\n            },\n            (err) => console.log('load data err', err),\n        );\n\n    // returning from another tab doesn't emit ionViewWillEnter() on child routes\n    // ionViewWillEnter() emitted on parent component\n    this.route.url\n        .subscribe((_) => {\n          console.log('url');\n          this.filter();\n        });\n  }\n\n  // ionViewWillEnter() {\n  //   this.filter();\n  // }\n\n  calcData() {\n    console.log('calc');\n    this.calculatedData.rooms = [];\n    let totalSoldAll = 0;\n    let totalRoomDaysAll = 0;\n    let totalPaymentsAll = 0;\n    const daysInMonth = fns.getDaysInMonth(this.sheduleService.convertISOToDate(this.date)) - 1;\n\n    this.rooms.forEach((room) => {\n      if (!room._id) {\n        // first room is 'All' rooms\n        this.calculatedData.rooms.push(room);\n        return;\n      }\n      this.calculatedData.rooms.push(room);\n      const position = this.calculatedData.rooms.length - 1;\n      let totalSold = 0;\n      let totalRoomDays = 0;\n      let totalPayments = 0;\n\n      this.payments.forEach((payment) => {\n        if (room._id === payment.room_id) {\n          return;\n        }\n        totalPayments += payment.amount;\n      });\n\n      this.bookings.forEach((booking) => {\n        if (room._id === booking.room_id) {\n          return;\n        }\n        const bookingTotalDays = fns.differenceInCalendarDays(\n            this.sheduleService.convertISOToDate(booking.dates.to),\n            this.sheduleService.convertISOToDate(booking.dates.from),\n        );\n        const bookingPricePerDay = (booking.price - booking.discount) / bookingTotalDays;\n\n        let startDate: string;\n        let endDate: string;\n        let bookingDaysInCurrentMonth = 0;\n\n        if (fns.isEqual(\n            this.sheduleService.convertISOToDate(booking.dates.from),\n            this.sheduleService.convertISOToDate(this.dateRangeLimits.upper),\n        )) {\n          bookingDaysInCurrentMonth = 1;\n        } else if (fns.isEqual(\n            this.sheduleService.convertISOToDate(booking.dates.to),\n            this.sheduleService.convertISOToDate(this.dateRangeLimits.lower),\n        )) {\n          bookingDaysInCurrentMonth = 0;\n        } else {\n          if (fns.isAfter(\n              this.sheduleService.convertISOToDate(booking.dates.from),\n              this.sheduleService.convertISOToDate(this.dateRangeLimits.lower),\n          ) || fns.isEqual(\n              this.sheduleService.convertISOToDate(booking.dates.from),\n              this.sheduleService.convertISOToDate(this.dateRangeLimits.lower),\n          )) {\n            startDate = booking.dates.from;\n          } else {\n            startDate = this.dateRangeLimits.lower;\n          }\n          if (fns.isBefore(\n              this.sheduleService.convertISOToDate(booking.dates.to),\n              this.sheduleService.convertISOToDate(this.dateRangeLimits.upper),\n          ) || fns.isEqual(\n              this.sheduleService.convertISOToDate(booking.dates.to),\n              this.sheduleService.convertISOToDate(this.dateRangeLimits.upper),\n          )) {\n            endDate = booking.dates.to;\n          } else {\n            endDate = this.dateRangeLimits.upper;\n          }\n          bookingDaysInCurrentMonth = fns.differenceInCalendarDays(\n              this.sheduleService.convertISOToDate(endDate),\n              this.sheduleService.convertISOToDate(startDate),\n          );\n          totalSold += bookingDaysInCurrentMonth * bookingPricePerDay;\n          totalRoomDays += bookingDaysInCurrentMonth;\n        }\n      });\n      // add analytics.totalSold to current room\n      this.calculatedData.rooms[position] = {\n        ...this.calculatedData.rooms[position],\n        analytics: {\n          totalSold,\n          totalRoomDays,\n          daysInMonth,\n          totalPayments,\n        }};\n      totalSoldAll += totalSold;\n      totalRoomDaysAll += totalRoomDays;\n      totalPaymentsAll += totalPayments;\n    });\n\n    // add analytics.totalSold to 'All' room which is at position 0\n    this.calculatedData.rooms[0] = {\n      ...this.calculatedData.rooms[0],\n      analytics: {\n        totalSold: totalSoldAll,\n        totalRoomDays: totalRoomDaysAll / this.calculatedData.rooms.length,\n        daysInMonth,\n        totalPayments: totalPaymentsAll,\n      }};\n    console.log('this.calculatedData.rooms', this.calculatedData.rooms);\n  }\n\n  filter() {\n    const bookingQuery: BookingQuery = this.createBookingQuery();\n    const paymentQuery: PaymentQuery = this.createPaymentQuery();\n    this.store.dispatch(new GetBookings(bookingQuery));\n    this.store.dispatch(new GetPayments(paymentQuery));\n  }\n\n  createBookingQuery(): BookingQuery {\n    this.dateRangeLimits = this.sheduleService.createDateRangeLimits(this.sheduleService.convertISOToDate(this.date));\n    return <BookingQuery>{\n      dateRangeLimits: this.dateRangeLimits,\n      // room_id: this.room?._id,\n      bookingStep: {\n        val: 'cancelled',\n        expr: '$ne',\n      },\n      // sort: {\n      //   field: this.sortField,\n      //   order: this.sortOrder,\n      // },\n    };\n  }\n\n  createPaymentQuery(): PaymentQuery {\n    this.dateRangeLimits = this.sheduleService.createDateRangeLimits(this.sheduleService.convertISOToDate(this.date));\n    return <PaymentQuery>{\n      dateRangeLimits: this.dateRangeLimits,\n      // room_id: this.room?._id,\n      // bookingStep: {\n      //   val: 'cancelled',\n      //   expr: '$ne',\n      // },\n      // sort: {\n      //   field: this.sortField,\n      //   order: this.sortOrder,\n      // },\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SummaryPageRoutingModule } from './summary-routing.module';\n\nimport { SummaryPage } from './summary.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SummaryPageRoutingModule\n  ],\n  declarations: [SummaryPage]\n})\nexport class SummaryPageModule {}\n"],"sourceRoot":"webpack:///"}